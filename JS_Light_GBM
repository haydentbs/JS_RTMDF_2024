{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2850d048",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:00.004126Z",
     "iopub.status.busy": "2024-10-26T17:01:00.003720Z",
     "iopub.status.idle": "2024-10-26T17:01:00.930464Z",
     "shell.execute_reply": "2024-10-26T17:01:00.929355Z"
    },
    "papermill": {
     "duration": 0.935548,
     "end_time": "2024-10-26T17:01:00.933499",
     "exception": false,
     "start_time": "2024-10-26T17:00:59.997951",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/jane-street-real-time-market-data-forecasting/responders.csv\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/sample_submission.csv\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/features.csv\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=4/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=5/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=6/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=3/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=1/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=8/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=2/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=0/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=7/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=9/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/lags.parquet/date_id=0/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/test.parquet/date_id=0/part-0.parquet\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/jane_street_gateway.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/jane_street_inference_server.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/__init__.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/templates.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/base_gateway.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/relay.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/kaggle_evaluation.proto\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/__init__.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/kaggle_evaluation_pb2.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/kaggle_evaluation_pb2_grpc.py\n",
      "/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/__init__.py\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f3cb71c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:00.945483Z",
     "iopub.status.busy": "2024-10-26T17:01:00.944909Z",
     "iopub.status.idle": "2024-10-26T17:01:03.482063Z",
     "shell.execute_reply": "2024-10-26T17:01:03.480859Z"
    },
    "papermill": {
     "duration": 2.545663,
     "end_time": "2024-10-26T17:01:03.484561",
     "exception": false,
     "start_time": "2024-10-26T17:01:00.938898",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import polars as pl\n",
    "from matplotlib import pyplot as plt\n",
    "import seaborn as sns\n",
    "from pathlib import Path\n",
    "from tqdm import tqdm\n",
    "from functools import reduce\n",
    "from sklearn.linear_model import Ridge\n",
    "import kaggle_evaluation.jane_street_inference_server\n",
    "\n",
    "from scipy.stats import pearsonr, spearmanr, kendalltau"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "73000fa2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:03.494034Z",
     "iopub.status.busy": "2024-10-26T17:01:03.493475Z",
     "iopub.status.idle": "2024-10-26T17:01:14.575756Z",
     "shell.execute_reply": "2024-10-26T17:01:14.574567Z"
    },
    "papermill": {
     "duration": 11.089674,
     "end_time": "2024-10-26T17:01:14.578113",
     "exception": false,
     "start_time": "2024-10-26T17:01:03.488439",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date_id</th>\n",
       "      <th>time_id</th>\n",
       "      <th>symbol_id</th>\n",
       "      <th>weight</th>\n",
       "      <th>feature_00</th>\n",
       "      <th>feature_01</th>\n",
       "      <th>feature_02</th>\n",
       "      <th>feature_03</th>\n",
       "      <th>feature_04</th>\n",
       "      <th>feature_05</th>\n",
       "      <th>...</th>\n",
       "      <th>feature_78</th>\n",
       "      <th>responder_0</th>\n",
       "      <th>responder_1</th>\n",
       "      <th>responder_2</th>\n",
       "      <th>responder_3</th>\n",
       "      <th>responder_4</th>\n",
       "      <th>responder_5</th>\n",
       "      <th>responder_6</th>\n",
       "      <th>responder_7</th>\n",
       "      <th>responder_8</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.084694</td>\n",
       "      <td>1.153571</td>\n",
       "      <td>1.563784</td>\n",
       "      <td>0.697396</td>\n",
       "      <td>0.756759</td>\n",
       "      <td>2.580965</td>\n",
       "      <td>0.171311</td>\n",
       "      <td>...</td>\n",
       "      <td>0.999516</td>\n",
       "      <td>0.417462</td>\n",
       "      <td>0.323897</td>\n",
       "      <td>0.601499</td>\n",
       "      <td>2.074103</td>\n",
       "      <td>0.746552</td>\n",
       "      <td>0.552013</td>\n",
       "      <td>3.071231</td>\n",
       "      <td>0.914794</td>\n",
       "      <td>0.997124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.232906</td>\n",
       "      <td>0.553354</td>\n",
       "      <td>1.730064</td>\n",
       "      <td>0.990195</td>\n",
       "      <td>0.611490</td>\n",
       "      <td>2.023031</td>\n",
       "      <td>0.319015</td>\n",
       "      <td>...</td>\n",
       "      <td>0.160609</td>\n",
       "      <td>-0.318671</td>\n",
       "      <td>-0.399384</td>\n",
       "      <td>-0.635306</td>\n",
       "      <td>2.092151</td>\n",
       "      <td>0.342582</td>\n",
       "      <td>0.757289</td>\n",
       "      <td>1.979042</td>\n",
       "      <td>0.967537</td>\n",
       "      <td>1.219739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2.404948</td>\n",
       "      <td>1.532503</td>\n",
       "      <td>2.095852</td>\n",
       "      <td>0.919688</td>\n",
       "      <td>0.583715</td>\n",
       "      <td>2.330047</td>\n",
       "      <td>0.337096</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.065761</td>\n",
       "      <td>0.200878</td>\n",
       "      <td>-0.006571</td>\n",
       "      <td>0.518870</td>\n",
       "      <td>-0.344441</td>\n",
       "      <td>0.641694</td>\n",
       "      <td>-0.646040</td>\n",
       "      <td>-0.506260</td>\n",
       "      <td>0.739797</td>\n",
       "      <td>-2.041514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.986533</td>\n",
       "      <td>0.647099</td>\n",
       "      <td>1.687460</td>\n",
       "      <td>0.569406</td>\n",
       "      <td>1.061679</td>\n",
       "      <td>2.444131</td>\n",
       "      <td>0.150487</td>\n",
       "      <td>...</td>\n",
       "      <td>0.526284</td>\n",
       "      <td>-0.349773</td>\n",
       "      <td>-0.235901</td>\n",
       "      <td>-0.428956</td>\n",
       "      <td>-1.903627</td>\n",
       "      <td>-1.214619</td>\n",
       "      <td>-0.469500</td>\n",
       "      <td>-2.590589</td>\n",
       "      <td>-0.946317</td>\n",
       "      <td>-0.390001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2.742601</td>\n",
       "      <td>1.096778</td>\n",
       "      <td>1.551411</td>\n",
       "      <td>0.632113</td>\n",
       "      <td>0.368218</td>\n",
       "      <td>2.181873</td>\n",
       "      <td>0.214604</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.965623</td>\n",
       "      <td>-0.373938</td>\n",
       "      <td>-0.209282</td>\n",
       "      <td>-0.095182</td>\n",
       "      <td>-1.598217</td>\n",
       "      <td>0.968505</td>\n",
       "      <td>-0.705594</td>\n",
       "      <td>-1.579623</td>\n",
       "      <td>0.954296</td>\n",
       "      <td>-1.805623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274571</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>34</td>\n",
       "      <td>3.242493</td>\n",
       "      <td>2.525160</td>\n",
       "      <td>-0.721981</td>\n",
       "      <td>2.544025</td>\n",
       "      <td>2.477615</td>\n",
       "      <td>0.417557</td>\n",
       "      <td>0.785812</td>\n",
       "      <td>...</td>\n",
       "      <td>0.016936</td>\n",
       "      <td>0.243475</td>\n",
       "      <td>0.166927</td>\n",
       "      <td>0.384940</td>\n",
       "      <td>-0.174297</td>\n",
       "      <td>-0.066046</td>\n",
       "      <td>-0.038767</td>\n",
       "      <td>-0.132337</td>\n",
       "      <td>-0.022426</td>\n",
       "      <td>-0.252461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274572</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>35</td>\n",
       "      <td>1.079139</td>\n",
       "      <td>1.857906</td>\n",
       "      <td>-0.790646</td>\n",
       "      <td>2.745439</td>\n",
       "      <td>2.339877</td>\n",
       "      <td>0.845065</td>\n",
       "      <td>0.651370</td>\n",
       "      <td>...</td>\n",
       "      <td>0.050860</td>\n",
       "      <td>0.850152</td>\n",
       "      <td>0.909382</td>\n",
       "      <td>1.015314</td>\n",
       "      <td>0.235962</td>\n",
       "      <td>0.122539</td>\n",
       "      <td>0.099559</td>\n",
       "      <td>-0.249584</td>\n",
       "      <td>-0.123571</td>\n",
       "      <td>-0.460630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274573</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>36</td>\n",
       "      <td>1.033172</td>\n",
       "      <td>2.515527</td>\n",
       "      <td>-0.672298</td>\n",
       "      <td>2.289250</td>\n",
       "      <td>2.521592</td>\n",
       "      <td>0.255077</td>\n",
       "      <td>0.919892</td>\n",
       "      <td>...</td>\n",
       "      <td>0.152333</td>\n",
       "      <td>0.395684</td>\n",
       "      <td>-0.292574</td>\n",
       "      <td>-3.215846</td>\n",
       "      <td>-0.535129</td>\n",
       "      <td>-0.178484</td>\n",
       "      <td>-1.808150</td>\n",
       "      <td>-0.065355</td>\n",
       "      <td>-0.000367</td>\n",
       "      <td>-0.125170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274574</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>37</td>\n",
       "      <td>1.243116</td>\n",
       "      <td>2.663298</td>\n",
       "      <td>-0.889112</td>\n",
       "      <td>2.313155</td>\n",
       "      <td>3.101428</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>0.618944</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.029483</td>\n",
       "      <td>1.925987</td>\n",
       "      <td>0.479394</td>\n",
       "      <td>3.621867</td>\n",
       "      <td>-0.107114</td>\n",
       "      <td>-0.063599</td>\n",
       "      <td>1.204755</td>\n",
       "      <td>-0.148711</td>\n",
       "      <td>-0.026583</td>\n",
       "      <td>-0.256395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274575</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>38</td>\n",
       "      <td>3.193685</td>\n",
       "      <td>2.728506</td>\n",
       "      <td>-0.745238</td>\n",
       "      <td>2.788789</td>\n",
       "      <td>2.343393</td>\n",
       "      <td>0.454731</td>\n",
       "      <td>0.862839</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.247774</td>\n",
       "      <td>1.228778</td>\n",
       "      <td>0.512562</td>\n",
       "      <td>-0.050865</td>\n",
       "      <td>0.160883</td>\n",
       "      <td>0.080756</td>\n",
       "      <td>-0.078237</td>\n",
       "      <td>-0.138548</td>\n",
       "      <td>-0.038771</td>\n",
       "      <td>-0.211940</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6274576 rows × 92 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date_id  time_id  symbol_id    weight  feature_00  feature_01  \\\n",
       "0           1530        0          0  3.084694    1.153571    1.563784   \n",
       "1           1530        0          1  2.232906    0.553354    1.730064   \n",
       "2           1530        0          2  2.404948    1.532503    2.095852   \n",
       "3           1530        0          3  1.986533    0.647099    1.687460   \n",
       "4           1530        0          4  2.742601    1.096778    1.551411   \n",
       "...          ...      ...        ...       ...         ...         ...   \n",
       "6274571     1698      967         34  3.242493    2.525160   -0.721981   \n",
       "6274572     1698      967         35  1.079139    1.857906   -0.790646   \n",
       "6274573     1698      967         36  1.033172    2.515527   -0.672298   \n",
       "6274574     1698      967         37  1.243116    2.663298   -0.889112   \n",
       "6274575     1698      967         38  3.193685    2.728506   -0.745238   \n",
       "\n",
       "         feature_02  feature_03  feature_04  feature_05  ...  feature_78  \\\n",
       "0          0.697396    0.756759    2.580965    0.171311  ...    0.999516   \n",
       "1          0.990195    0.611490    2.023031    0.319015  ...    0.160609   \n",
       "2          0.919688    0.583715    2.330047    0.337096  ...   -0.065761   \n",
       "3          0.569406    1.061679    2.444131    0.150487  ...    0.526284   \n",
       "4          0.632113    0.368218    2.181873    0.214604  ...   -0.965623   \n",
       "...             ...         ...         ...         ...  ...         ...   \n",
       "6274571    2.544025    2.477615    0.417557    0.785812  ...    0.016936   \n",
       "6274572    2.745439    2.339877    0.845065    0.651370  ...    0.050860   \n",
       "6274573    2.289250    2.521592    0.255077    0.919892  ...    0.152333   \n",
       "6274574    2.313155    3.101428    0.324454    0.618944  ...   -0.029483   \n",
       "6274575    2.788789    2.343393    0.454731    0.862839  ...   -0.247774   \n",
       "\n",
       "         responder_0  responder_1  responder_2  responder_3  responder_4  \\\n",
       "0           0.417462     0.323897     0.601499     2.074103     0.746552   \n",
       "1          -0.318671    -0.399384    -0.635306     2.092151     0.342582   \n",
       "2           0.200878    -0.006571     0.518870    -0.344441     0.641694   \n",
       "3          -0.349773    -0.235901    -0.428956    -1.903627    -1.214619   \n",
       "4          -0.373938    -0.209282    -0.095182    -1.598217     0.968505   \n",
       "...              ...          ...          ...          ...          ...   \n",
       "6274571     0.243475     0.166927     0.384940    -0.174297    -0.066046   \n",
       "6274572     0.850152     0.909382     1.015314     0.235962     0.122539   \n",
       "6274573     0.395684    -0.292574    -3.215846    -0.535129    -0.178484   \n",
       "6274574     1.925987     0.479394     3.621867    -0.107114    -0.063599   \n",
       "6274575     1.228778     0.512562    -0.050865     0.160883     0.080756   \n",
       "\n",
       "         responder_5  responder_6  responder_7  responder_8  \n",
       "0           0.552013     3.071231     0.914794     0.997124  \n",
       "1           0.757289     1.979042     0.967537     1.219739  \n",
       "2          -0.646040    -0.506260     0.739797    -2.041514  \n",
       "3          -0.469500    -2.590589    -0.946317    -0.390001  \n",
       "4          -0.705594    -1.579623     0.954296    -1.805623  \n",
       "...              ...          ...          ...          ...  \n",
       "6274571    -0.038767    -0.132337    -0.022426    -0.252461  \n",
       "6274572     0.099559    -0.249584    -0.123571    -0.460630  \n",
       "6274573    -1.808150    -0.065355    -0.000367    -0.125170  \n",
       "6274574     1.204755    -0.148711    -0.026583    -0.256395  \n",
       "6274575    -0.078237    -0.138548    -0.038771    -0.211940  \n",
       "\n",
       "[6274576 rows x 92 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "N_PARTITION = 10\n",
    "\n",
    "# train_parquets = [DATA_DIR / f\"train.parquet/partition_id={i}/part-0.parquet\" for i in range(N_PARTITION)]\n",
    "train_parquets = \"part-0.parquet\"\n",
    "\n",
    "TEST_PARQUET =\"/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=9/part-0.parquet\"\n",
    "\n",
    "test = pd.read_parquet(TEST_PARQUET)\n",
    "\n",
    "test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5fc56965",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:14.589019Z",
     "iopub.status.busy": "2024-10-26T17:01:14.588607Z",
     "iopub.status.idle": "2024-10-26T17:01:14.593862Z",
     "shell.execute_reply": "2024-10-26T17:01:14.592871Z"
    },
    "papermill": {
     "duration": 0.013431,
     "end_time": "2024-10-26T17:01:14.595913",
     "exception": false,
     "start_time": "2024-10-26T17:01:14.582482",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "feature_cols = [f'feature_{x:02}' for x in range(79)]\n",
    "responder_cols = [f'responder_{i}' for i in range(9)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3ef6703a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:14.605846Z",
     "iopub.status.busy": "2024-10-26T17:01:14.605443Z",
     "iopub.status.idle": "2024-10-26T17:01:29.589475Z",
     "shell.execute_reply": "2024-10-26T17:01:29.588386Z"
    },
    "papermill": {
     "duration": 14.991819,
     "end_time": "2024-10-26T17:01:29.591868",
     "exception": false,
     "start_time": "2024-10-26T17:01:14.600049",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date_id</th>\n",
       "      <th>time_id</th>\n",
       "      <th>symbol_id</th>\n",
       "      <th>weight</th>\n",
       "      <th>feature_04</th>\n",
       "      <th>feature_06</th>\n",
       "      <th>feature_15</th>\n",
       "      <th>feature_16</th>\n",
       "      <th>feature_17</th>\n",
       "      <th>feature_36</th>\n",
       "      <th>...</th>\n",
       "      <th>feature_56</th>\n",
       "      <th>responder_0</th>\n",
       "      <th>responder_1</th>\n",
       "      <th>responder_2</th>\n",
       "      <th>responder_3</th>\n",
       "      <th>responder_4</th>\n",
       "      <th>responder_5</th>\n",
       "      <th>responder_6</th>\n",
       "      <th>responder_7</th>\n",
       "      <th>responder_8</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.084694</td>\n",
       "      <td>2.580965</td>\n",
       "      <td>1.126353</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.203291</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.507707</td>\n",
       "      <td>...</td>\n",
       "      <td>-1.227900</td>\n",
       "      <td>0.417462</td>\n",
       "      <td>0.323897</td>\n",
       "      <td>0.601499</td>\n",
       "      <td>2.074103</td>\n",
       "      <td>0.746552</td>\n",
       "      <td>0.552013</td>\n",
       "      <td>3.071231</td>\n",
       "      <td>0.914794</td>\n",
       "      <td>0.997124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.232906</td>\n",
       "      <td>2.023031</td>\n",
       "      <td>1.183371</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.318528</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.071485</td>\n",
       "      <td>...</td>\n",
       "      <td>-2.354893</td>\n",
       "      <td>-0.318671</td>\n",
       "      <td>-0.399384</td>\n",
       "      <td>-0.635306</td>\n",
       "      <td>2.092151</td>\n",
       "      <td>0.342582</td>\n",
       "      <td>0.757289</td>\n",
       "      <td>1.979042</td>\n",
       "      <td>0.967537</td>\n",
       "      <td>1.219739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2.404948</td>\n",
       "      <td>2.330047</td>\n",
       "      <td>1.262236</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.531873</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.575270</td>\n",
       "      <td>...</td>\n",
       "      <td>-2.190607</td>\n",
       "      <td>0.200878</td>\n",
       "      <td>-0.006571</td>\n",
       "      <td>0.518870</td>\n",
       "      <td>-0.344441</td>\n",
       "      <td>0.641694</td>\n",
       "      <td>-0.646040</td>\n",
       "      <td>-0.506260</td>\n",
       "      <td>0.739797</td>\n",
       "      <td>-2.041514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.986533</td>\n",
       "      <td>2.444131</td>\n",
       "      <td>0.896543</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.183964</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.663553</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.760486</td>\n",
       "      <td>-0.349773</td>\n",
       "      <td>-0.235901</td>\n",
       "      <td>-0.428956</td>\n",
       "      <td>-1.903627</td>\n",
       "      <td>-1.214619</td>\n",
       "      <td>-0.469500</td>\n",
       "      <td>-2.590589</td>\n",
       "      <td>-0.946317</td>\n",
       "      <td>-0.390001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1530</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2.742601</td>\n",
       "      <td>2.181873</td>\n",
       "      <td>1.194230</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.638341</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.951203</td>\n",
       "      <td>...</td>\n",
       "      <td>-1.490257</td>\n",
       "      <td>-0.373938</td>\n",
       "      <td>-0.209282</td>\n",
       "      <td>-0.095182</td>\n",
       "      <td>-1.598217</td>\n",
       "      <td>0.968505</td>\n",
       "      <td>-0.705594</td>\n",
       "      <td>-1.579623</td>\n",
       "      <td>0.954296</td>\n",
       "      <td>-1.805623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274571</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>34</td>\n",
       "      <td>3.242493</td>\n",
       "      <td>0.417557</td>\n",
       "      <td>1.117796</td>\n",
       "      <td>-0.671189</td>\n",
       "      <td>-0.328600</td>\n",
       "      <td>-0.486132</td>\n",
       "      <td>-1.655316</td>\n",
       "      <td>...</td>\n",
       "      <td>1.179617</td>\n",
       "      <td>0.243475</td>\n",
       "      <td>0.166927</td>\n",
       "      <td>0.384940</td>\n",
       "      <td>-0.174297</td>\n",
       "      <td>-0.066046</td>\n",
       "      <td>-0.038767</td>\n",
       "      <td>-0.132337</td>\n",
       "      <td>-0.022426</td>\n",
       "      <td>-0.252461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274572</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>35</td>\n",
       "      <td>1.079139</td>\n",
       "      <td>0.845065</td>\n",
       "      <td>1.180301</td>\n",
       "      <td>-0.421137</td>\n",
       "      <td>0.217080</td>\n",
       "      <td>-0.258775</td>\n",
       "      <td>0.763459</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.175486</td>\n",
       "      <td>0.850152</td>\n",
       "      <td>0.909382</td>\n",
       "      <td>1.015314</td>\n",
       "      <td>0.235962</td>\n",
       "      <td>0.122539</td>\n",
       "      <td>0.099559</td>\n",
       "      <td>-0.249584</td>\n",
       "      <td>-0.123571</td>\n",
       "      <td>-0.460630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274573</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>36</td>\n",
       "      <td>1.033172</td>\n",
       "      <td>0.255077</td>\n",
       "      <td>1.172018</td>\n",
       "      <td>-0.528109</td>\n",
       "      <td>-0.704952</td>\n",
       "      <td>-0.704818</td>\n",
       "      <td>0.440965</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.290343</td>\n",
       "      <td>0.395684</td>\n",
       "      <td>-0.292574</td>\n",
       "      <td>-3.215846</td>\n",
       "      <td>-0.535129</td>\n",
       "      <td>-0.178484</td>\n",
       "      <td>-1.808150</td>\n",
       "      <td>-0.065355</td>\n",
       "      <td>-0.000367</td>\n",
       "      <td>-0.125170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274574</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>37</td>\n",
       "      <td>1.243116</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>1.185663</td>\n",
       "      <td>-0.611075</td>\n",
       "      <td>-0.513717</td>\n",
       "      <td>-0.891423</td>\n",
       "      <td>0.842925</td>\n",
       "      <td>...</td>\n",
       "      <td>0.301135</td>\n",
       "      <td>1.925987</td>\n",
       "      <td>0.479394</td>\n",
       "      <td>3.621867</td>\n",
       "      <td>-0.107114</td>\n",
       "      <td>-0.063599</td>\n",
       "      <td>1.204755</td>\n",
       "      <td>-0.148711</td>\n",
       "      <td>-0.026583</td>\n",
       "      <td>-0.256395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274575</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>38</td>\n",
       "      <td>3.193685</td>\n",
       "      <td>0.454731</td>\n",
       "      <td>0.964795</td>\n",
       "      <td>-0.952069</td>\n",
       "      <td>-0.679168</td>\n",
       "      <td>-0.597603</td>\n",
       "      <td>-1.443649</td>\n",
       "      <td>...</td>\n",
       "      <td>0.662521</td>\n",
       "      <td>1.228778</td>\n",
       "      <td>0.512562</td>\n",
       "      <td>-0.050865</td>\n",
       "      <td>0.160883</td>\n",
       "      <td>0.080756</td>\n",
       "      <td>-0.078237</td>\n",
       "      <td>-0.138548</td>\n",
       "      <td>-0.038771</td>\n",
       "      <td>-0.211940</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6274576 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date_id  time_id  symbol_id    weight  feature_04  feature_06  \\\n",
       "0           1530        0          0  3.084694    2.580965    1.126353   \n",
       "1           1530        0          1  2.232906    2.023031    1.183371   \n",
       "2           1530        0          2  2.404948    2.330047    1.262236   \n",
       "3           1530        0          3  1.986533    2.444131    0.896543   \n",
       "4           1530        0          4  2.742601    2.181873    1.194230   \n",
       "...          ...      ...        ...       ...         ...         ...   \n",
       "6274571     1698      967         34  3.242493    0.417557    1.117796   \n",
       "6274572     1698      967         35  1.079139    0.845065    1.180301   \n",
       "6274573     1698      967         36  1.033172    0.255077    1.172018   \n",
       "6274574     1698      967         37  1.243116    0.324454    1.185663   \n",
       "6274575     1698      967         38  3.193685    0.454731    0.964795   \n",
       "\n",
       "         feature_15  feature_16  feature_17  feature_36  ...  feature_56  \\\n",
       "0               NaN   -0.203291         NaN   -0.507707  ...   -1.227900   \n",
       "1               NaN   -0.318528         NaN    2.071485  ...   -2.354893   \n",
       "2               NaN   -0.531873         NaN   -0.575270  ...   -2.190607   \n",
       "3               NaN    0.183964         NaN    1.663553  ...   -0.760486   \n",
       "4               NaN   -0.638341         NaN   -0.951203  ...   -1.490257   \n",
       "...             ...         ...         ...         ...  ...         ...   \n",
       "6274571   -0.671189   -0.328600   -0.486132   -1.655316  ...    1.179617   \n",
       "6274572   -0.421137    0.217080   -0.258775    0.763459  ...   -0.175486   \n",
       "6274573   -0.528109   -0.704952   -0.704818    0.440965  ...   -0.290343   \n",
       "6274574   -0.611075   -0.513717   -0.891423    0.842925  ...    0.301135   \n",
       "6274575   -0.952069   -0.679168   -0.597603   -1.443649  ...    0.662521   \n",
       "\n",
       "         responder_0  responder_1  responder_2  responder_3  responder_4  \\\n",
       "0           0.417462     0.323897     0.601499     2.074103     0.746552   \n",
       "1          -0.318671    -0.399384    -0.635306     2.092151     0.342582   \n",
       "2           0.200878    -0.006571     0.518870    -0.344441     0.641694   \n",
       "3          -0.349773    -0.235901    -0.428956    -1.903627    -1.214619   \n",
       "4          -0.373938    -0.209282    -0.095182    -1.598217     0.968505   \n",
       "...              ...          ...          ...          ...          ...   \n",
       "6274571     0.243475     0.166927     0.384940    -0.174297    -0.066046   \n",
       "6274572     0.850152     0.909382     1.015314     0.235962     0.122539   \n",
       "6274573     0.395684    -0.292574    -3.215846    -0.535129    -0.178484   \n",
       "6274574     1.925987     0.479394     3.621867    -0.107114    -0.063599   \n",
       "6274575     1.228778     0.512562    -0.050865     0.160883     0.080756   \n",
       "\n",
       "         responder_5  responder_6  responder_7  responder_8  \n",
       "0           0.552013     3.071231     0.914794     0.997124  \n",
       "1           0.757289     1.979042     0.967537     1.219739  \n",
       "2          -0.646040    -0.506260     0.739797    -2.041514  \n",
       "3          -0.469500    -2.590589    -0.946317    -0.390001  \n",
       "4          -0.705594    -1.579623     0.954296    -1.805623  \n",
       "...              ...          ...          ...          ...  \n",
       "6274571    -0.038767    -0.132337    -0.022426    -0.252461  \n",
       "6274572     0.099559    -0.249584    -0.123571    -0.460630  \n",
       "6274573    -1.808150    -0.065355    -0.000367    -0.125170  \n",
       "6274574     1.204755    -0.148711    -0.026583    -0.256395  \n",
       "6274575    -0.078237    -0.138548    -0.038771    -0.211940  \n",
       "\n",
       "[6274576 rows x 21 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_with_responder6 = test[feature_cols].corrwith(test['responder_6'])\n",
    "\n",
    "low_cor_feat = corr_with_responder6[abs(corr_with_responder6) < 0.016].index\n",
    "test_cleaned = test.drop(columns=low_cor_feat)\n",
    "test_no_nan = test_cleaned.dropna(axis=1, how='all')\n",
    "test_no_nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e5b925ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:29.604081Z",
     "iopub.status.busy": "2024-10-26T17:01:29.603187Z",
     "iopub.status.idle": "2024-10-26T17:01:30.227685Z",
     "shell.execute_reply": "2024-10-26T17:01:30.226694Z"
    },
    "papermill": {
     "duration": 0.633488,
     "end_time": "2024-10-26T17:01:30.230437",
     "exception": false,
     "start_time": "2024-10-26T17:01:29.596949",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>weight</th>\n",
       "      <th>feature_04</th>\n",
       "      <th>feature_06</th>\n",
       "      <th>feature_15</th>\n",
       "      <th>feature_16</th>\n",
       "      <th>feature_17</th>\n",
       "      <th>feature_36</th>\n",
       "      <th>feature_45</th>\n",
       "      <th>feature_56</th>\n",
       "      <th>responder_0</th>\n",
       "      <th>responder_1</th>\n",
       "      <th>responder_2</th>\n",
       "      <th>responder_3</th>\n",
       "      <th>responder_4</th>\n",
       "      <th>responder_5</th>\n",
       "      <th>responder_6</th>\n",
       "      <th>responder_7</th>\n",
       "      <th>responder_8</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date_id</th>\n",
       "      <th>time_id</th>\n",
       "      <th>symbol_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1530</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">0</th>\n",
       "      <th>0</th>\n",
       "      <td>3.084694</td>\n",
       "      <td>2.580965</td>\n",
       "      <td>1.126353</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.203291</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.507707</td>\n",
       "      <td>-1.967165</td>\n",
       "      <td>-1.227900</td>\n",
       "      <td>0.417462</td>\n",
       "      <td>0.323897</td>\n",
       "      <td>0.601499</td>\n",
       "      <td>2.074103</td>\n",
       "      <td>0.746552</td>\n",
       "      <td>0.552013</td>\n",
       "      <td>3.071231</td>\n",
       "      <td>0.914794</td>\n",
       "      <td>0.997124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.232906</td>\n",
       "      <td>2.023031</td>\n",
       "      <td>1.183371</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.318528</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.071485</td>\n",
       "      <td>-1.304763</td>\n",
       "      <td>-2.354893</td>\n",
       "      <td>-0.318671</td>\n",
       "      <td>-0.399384</td>\n",
       "      <td>-0.635306</td>\n",
       "      <td>2.092151</td>\n",
       "      <td>0.342582</td>\n",
       "      <td>0.757289</td>\n",
       "      <td>1.979042</td>\n",
       "      <td>0.967537</td>\n",
       "      <td>1.219739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.404948</td>\n",
       "      <td>2.330047</td>\n",
       "      <td>1.262236</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.531873</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.575270</td>\n",
       "      <td>-1.019831</td>\n",
       "      <td>-2.190607</td>\n",
       "      <td>0.200878</td>\n",
       "      <td>-0.006571</td>\n",
       "      <td>0.518870</td>\n",
       "      <td>-0.344441</td>\n",
       "      <td>0.641694</td>\n",
       "      <td>-0.646040</td>\n",
       "      <td>-0.506260</td>\n",
       "      <td>0.739797</td>\n",
       "      <td>-2.041514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.986533</td>\n",
       "      <td>2.444131</td>\n",
       "      <td>0.896543</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.183964</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.663553</td>\n",
       "      <td>-0.693391</td>\n",
       "      <td>-0.760486</td>\n",
       "      <td>-0.349773</td>\n",
       "      <td>-0.235901</td>\n",
       "      <td>-0.428956</td>\n",
       "      <td>-1.903627</td>\n",
       "      <td>-1.214619</td>\n",
       "      <td>-0.469500</td>\n",
       "      <td>-2.590589</td>\n",
       "      <td>-0.946317</td>\n",
       "      <td>-0.390001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.742601</td>\n",
       "      <td>2.181873</td>\n",
       "      <td>1.194230</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.638341</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.951203</td>\n",
       "      <td>-1.331183</td>\n",
       "      <td>-1.490257</td>\n",
       "      <td>-0.373938</td>\n",
       "      <td>-0.209282</td>\n",
       "      <td>-0.095182</td>\n",
       "      <td>-1.598217</td>\n",
       "      <td>0.968505</td>\n",
       "      <td>-0.705594</td>\n",
       "      <td>-1.579623</td>\n",
       "      <td>0.954296</td>\n",
       "      <td>-1.805623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1698</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">967</th>\n",
       "      <th>34</th>\n",
       "      <td>3.242493</td>\n",
       "      <td>0.417557</td>\n",
       "      <td>1.117796</td>\n",
       "      <td>-0.671189</td>\n",
       "      <td>-0.328600</td>\n",
       "      <td>-0.486132</td>\n",
       "      <td>-1.655316</td>\n",
       "      <td>1.309866</td>\n",
       "      <td>1.179617</td>\n",
       "      <td>0.243475</td>\n",
       "      <td>0.166927</td>\n",
       "      <td>0.384940</td>\n",
       "      <td>-0.174297</td>\n",
       "      <td>-0.066046</td>\n",
       "      <td>-0.038767</td>\n",
       "      <td>-0.132337</td>\n",
       "      <td>-0.022426</td>\n",
       "      <td>-0.252461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>1.079139</td>\n",
       "      <td>0.845065</td>\n",
       "      <td>1.180301</td>\n",
       "      <td>-0.421137</td>\n",
       "      <td>0.217080</td>\n",
       "      <td>-0.258775</td>\n",
       "      <td>0.763459</td>\n",
       "      <td>0.409564</td>\n",
       "      <td>-0.175486</td>\n",
       "      <td>0.850152</td>\n",
       "      <td>0.909382</td>\n",
       "      <td>1.015314</td>\n",
       "      <td>0.235962</td>\n",
       "      <td>0.122539</td>\n",
       "      <td>0.099559</td>\n",
       "      <td>-0.249584</td>\n",
       "      <td>-0.123571</td>\n",
       "      <td>-0.460630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>1.033172</td>\n",
       "      <td>0.255077</td>\n",
       "      <td>1.172018</td>\n",
       "      <td>-0.528109</td>\n",
       "      <td>-0.704952</td>\n",
       "      <td>-0.704818</td>\n",
       "      <td>0.440965</td>\n",
       "      <td>-0.253755</td>\n",
       "      <td>-0.290343</td>\n",
       "      <td>0.395684</td>\n",
       "      <td>-0.292574</td>\n",
       "      <td>-3.215846</td>\n",
       "      <td>-0.535129</td>\n",
       "      <td>-0.178484</td>\n",
       "      <td>-1.808150</td>\n",
       "      <td>-0.065355</td>\n",
       "      <td>-0.000367</td>\n",
       "      <td>-0.125170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>1.243116</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>1.185663</td>\n",
       "      <td>-0.611075</td>\n",
       "      <td>-0.513717</td>\n",
       "      <td>-0.891423</td>\n",
       "      <td>0.842925</td>\n",
       "      <td>0.203037</td>\n",
       "      <td>0.301135</td>\n",
       "      <td>1.925987</td>\n",
       "      <td>0.479394</td>\n",
       "      <td>3.621867</td>\n",
       "      <td>-0.107114</td>\n",
       "      <td>-0.063599</td>\n",
       "      <td>1.204755</td>\n",
       "      <td>-0.148711</td>\n",
       "      <td>-0.026583</td>\n",
       "      <td>-0.256395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>3.193685</td>\n",
       "      <td>0.454731</td>\n",
       "      <td>0.964795</td>\n",
       "      <td>-0.952069</td>\n",
       "      <td>-0.679168</td>\n",
       "      <td>-0.597603</td>\n",
       "      <td>-1.443649</td>\n",
       "      <td>0.517313</td>\n",
       "      <td>0.662521</td>\n",
       "      <td>1.228778</td>\n",
       "      <td>0.512562</td>\n",
       "      <td>-0.050865</td>\n",
       "      <td>0.160883</td>\n",
       "      <td>0.080756</td>\n",
       "      <td>-0.078237</td>\n",
       "      <td>-0.138548</td>\n",
       "      <td>-0.038771</td>\n",
       "      <td>-0.211940</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6274576 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             weight  feature_04  feature_06  feature_15  \\\n",
       "date_id time_id symbol_id                                                 \n",
       "1530    0       0          3.084694    2.580965    1.126353         NaN   \n",
       "                1          2.232906    2.023031    1.183371         NaN   \n",
       "                2          2.404948    2.330047    1.262236         NaN   \n",
       "                3          1.986533    2.444131    0.896543         NaN   \n",
       "                4          2.742601    2.181873    1.194230         NaN   \n",
       "...                             ...         ...         ...         ...   \n",
       "1698    967     34         3.242493    0.417557    1.117796   -0.671189   \n",
       "                35         1.079139    0.845065    1.180301   -0.421137   \n",
       "                36         1.033172    0.255077    1.172018   -0.528109   \n",
       "                37         1.243116    0.324454    1.185663   -0.611075   \n",
       "                38         3.193685    0.454731    0.964795   -0.952069   \n",
       "\n",
       "                           feature_16  feature_17  feature_36  feature_45  \\\n",
       "date_id time_id symbol_id                                                   \n",
       "1530    0       0           -0.203291         NaN   -0.507707   -1.967165   \n",
       "                1           -0.318528         NaN    2.071485   -1.304763   \n",
       "                2           -0.531873         NaN   -0.575270   -1.019831   \n",
       "                3            0.183964         NaN    1.663553   -0.693391   \n",
       "                4           -0.638341         NaN   -0.951203   -1.331183   \n",
       "...                               ...         ...         ...         ...   \n",
       "1698    967     34          -0.328600   -0.486132   -1.655316    1.309866   \n",
       "                35           0.217080   -0.258775    0.763459    0.409564   \n",
       "                36          -0.704952   -0.704818    0.440965   -0.253755   \n",
       "                37          -0.513717   -0.891423    0.842925    0.203037   \n",
       "                38          -0.679168   -0.597603   -1.443649    0.517313   \n",
       "\n",
       "                           feature_56  responder_0  responder_1  responder_2  \\\n",
       "date_id time_id symbol_id                                                      \n",
       "1530    0       0           -1.227900     0.417462     0.323897     0.601499   \n",
       "                1           -2.354893    -0.318671    -0.399384    -0.635306   \n",
       "                2           -2.190607     0.200878    -0.006571     0.518870   \n",
       "                3           -0.760486    -0.349773    -0.235901    -0.428956   \n",
       "                4           -1.490257    -0.373938    -0.209282    -0.095182   \n",
       "...                               ...          ...          ...          ...   \n",
       "1698    967     34           1.179617     0.243475     0.166927     0.384940   \n",
       "                35          -0.175486     0.850152     0.909382     1.015314   \n",
       "                36          -0.290343     0.395684    -0.292574    -3.215846   \n",
       "                37           0.301135     1.925987     0.479394     3.621867   \n",
       "                38           0.662521     1.228778     0.512562    -0.050865   \n",
       "\n",
       "                           responder_3  responder_4  responder_5  responder_6  \\\n",
       "date_id time_id symbol_id                                                       \n",
       "1530    0       0             2.074103     0.746552     0.552013     3.071231   \n",
       "                1             2.092151     0.342582     0.757289     1.979042   \n",
       "                2            -0.344441     0.641694    -0.646040    -0.506260   \n",
       "                3            -1.903627    -1.214619    -0.469500    -2.590589   \n",
       "                4            -1.598217     0.968505    -0.705594    -1.579623   \n",
       "...                                ...          ...          ...          ...   \n",
       "1698    967     34           -0.174297    -0.066046    -0.038767    -0.132337   \n",
       "                35            0.235962     0.122539     0.099559    -0.249584   \n",
       "                36           -0.535129    -0.178484    -1.808150    -0.065355   \n",
       "                37           -0.107114    -0.063599     1.204755    -0.148711   \n",
       "                38            0.160883     0.080756    -0.078237    -0.138548   \n",
       "\n",
       "                           responder_7  responder_8  \n",
       "date_id time_id symbol_id                            \n",
       "1530    0       0             0.914794     0.997124  \n",
       "                1             0.967537     1.219739  \n",
       "                2             0.739797    -2.041514  \n",
       "                3            -0.946317    -0.390001  \n",
       "                4             0.954296    -1.805623  \n",
       "...                                ...          ...  \n",
       "1698    967     34           -0.022426    -0.252461  \n",
       "                35           -0.123571    -0.460630  \n",
       "                36           -0.000367    -0.125170  \n",
       "                37           -0.026583    -0.256395  \n",
       "                38           -0.038771    -0.211940  \n",
       "\n",
       "[6274576 rows x 18 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_no_nan.groupby(['date_id', 'time_id'])\n",
    "test_no_nan.set_index(['date_id', 'time_id', 'symbol_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cdb03100",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:30.242842Z",
     "iopub.status.busy": "2024-10-26T17:01:30.242410Z",
     "iopub.status.idle": "2024-10-26T17:01:30.739927Z",
     "shell.execute_reply": "2024-10-26T17:01:30.738670Z"
    },
    "papermill": {
     "duration": 0.506701,
     "end_time": "2024-10-26T17:01:30.742517",
     "exception": false,
     "start_time": "2024-10-26T17:01:30.235816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date_id</th>\n",
       "      <th>time_id</th>\n",
       "      <th>symbol_id</th>\n",
       "      <th>weight</th>\n",
       "      <th>feature_04</th>\n",
       "      <th>feature_06</th>\n",
       "      <th>feature_15</th>\n",
       "      <th>feature_16</th>\n",
       "      <th>feature_17</th>\n",
       "      <th>feature_36</th>\n",
       "      <th>feature_45</th>\n",
       "      <th>feature_56</th>\n",
       "      <th>responder_6</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>1530</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>3.084694</td>\n",
       "      <td>1.915233</td>\n",
       "      <td>-0.113710</td>\n",
       "      <td>-0.582334</td>\n",
       "      <td>-0.677112</td>\n",
       "      <td>-0.665190</td>\n",
       "      <td>-2.158748</td>\n",
       "      <td>-0.962597</td>\n",
       "      <td>-1.867182</td>\n",
       "      <td>0.397424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1530</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>2.232906</td>\n",
       "      <td>2.479117</td>\n",
       "      <td>-0.120363</td>\n",
       "      <td>-0.615883</td>\n",
       "      <td>-0.491795</td>\n",
       "      <td>-0.647937</td>\n",
       "      <td>1.323964</td>\n",
       "      <td>-0.962650</td>\n",
       "      <td>-1.512171</td>\n",
       "      <td>0.497049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>1530</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>2.404948</td>\n",
       "      <td>1.518317</td>\n",
       "      <td>-0.134236</td>\n",
       "      <td>-0.676956</td>\n",
       "      <td>-0.841851</td>\n",
       "      <td>-0.749244</td>\n",
       "      <td>0.687150</td>\n",
       "      <td>-0.541013</td>\n",
       "      <td>-0.720962</td>\n",
       "      <td>-0.082120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>891</th>\n",
       "      <td>1530</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>1.986533</td>\n",
       "      <td>2.414281</td>\n",
       "      <td>-0.207788</td>\n",
       "      <td>-0.636845</td>\n",
       "      <td>-0.812996</td>\n",
       "      <td>-0.604094</td>\n",
       "      <td>2.074668</td>\n",
       "      <td>0.096304</td>\n",
       "      <td>-0.028995</td>\n",
       "      <td>-2.276462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>892</th>\n",
       "      <td>1530</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "      <td>2.742601</td>\n",
       "      <td>2.430181</td>\n",
       "      <td>-0.101107</td>\n",
       "      <td>-0.771855</td>\n",
       "      <td>-0.755586</td>\n",
       "      <td>-0.641029</td>\n",
       "      <td>1.203425</td>\n",
       "      <td>0.242947</td>\n",
       "      <td>-0.016361</td>\n",
       "      <td>0.266114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274571</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>34</td>\n",
       "      <td>3.242493</td>\n",
       "      <td>0.417557</td>\n",
       "      <td>1.117796</td>\n",
       "      <td>-0.671189</td>\n",
       "      <td>-0.328600</td>\n",
       "      <td>-0.486132</td>\n",
       "      <td>-1.655316</td>\n",
       "      <td>1.309866</td>\n",
       "      <td>1.179617</td>\n",
       "      <td>-0.132337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274572</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>35</td>\n",
       "      <td>1.079139</td>\n",
       "      <td>0.845065</td>\n",
       "      <td>1.180301</td>\n",
       "      <td>-0.421137</td>\n",
       "      <td>0.217080</td>\n",
       "      <td>-0.258775</td>\n",
       "      <td>0.763459</td>\n",
       "      <td>0.409564</td>\n",
       "      <td>-0.175486</td>\n",
       "      <td>-0.249584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274573</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>36</td>\n",
       "      <td>1.033172</td>\n",
       "      <td>0.255077</td>\n",
       "      <td>1.172018</td>\n",
       "      <td>-0.528109</td>\n",
       "      <td>-0.704952</td>\n",
       "      <td>-0.704818</td>\n",
       "      <td>0.440965</td>\n",
       "      <td>-0.253755</td>\n",
       "      <td>-0.290343</td>\n",
       "      <td>-0.065355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274574</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>37</td>\n",
       "      <td>1.243116</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>1.185663</td>\n",
       "      <td>-0.611075</td>\n",
       "      <td>-0.513717</td>\n",
       "      <td>-0.891423</td>\n",
       "      <td>0.842925</td>\n",
       "      <td>0.203037</td>\n",
       "      <td>0.301135</td>\n",
       "      <td>-0.148711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6274575</th>\n",
       "      <td>1698</td>\n",
       "      <td>967</td>\n",
       "      <td>38</td>\n",
       "      <td>3.193685</td>\n",
       "      <td>0.454731</td>\n",
       "      <td>0.964795</td>\n",
       "      <td>-0.952069</td>\n",
       "      <td>-0.679168</td>\n",
       "      <td>-0.597603</td>\n",
       "      <td>-1.443649</td>\n",
       "      <td>0.517313</td>\n",
       "      <td>0.662521</td>\n",
       "      <td>-0.138548</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6118957 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date_id  time_id  symbol_id    weight  feature_04  feature_06  \\\n",
       "888         1530       24          0  3.084694    1.915233   -0.113710   \n",
       "889         1530       24          1  2.232906    2.479117   -0.120363   \n",
       "890         1530       24          2  2.404948    1.518317   -0.134236   \n",
       "891         1530       24          3  1.986533    2.414281   -0.207788   \n",
       "892         1530       24          4  2.742601    2.430181   -0.101107   \n",
       "...          ...      ...        ...       ...         ...         ...   \n",
       "6274571     1698      967         34  3.242493    0.417557    1.117796   \n",
       "6274572     1698      967         35  1.079139    0.845065    1.180301   \n",
       "6274573     1698      967         36  1.033172    0.255077    1.172018   \n",
       "6274574     1698      967         37  1.243116    0.324454    1.185663   \n",
       "6274575     1698      967         38  3.193685    0.454731    0.964795   \n",
       "\n",
       "         feature_15  feature_16  feature_17  feature_36  feature_45  \\\n",
       "888       -0.582334   -0.677112   -0.665190   -2.158748   -0.962597   \n",
       "889       -0.615883   -0.491795   -0.647937    1.323964   -0.962650   \n",
       "890       -0.676956   -0.841851   -0.749244    0.687150   -0.541013   \n",
       "891       -0.636845   -0.812996   -0.604094    2.074668    0.096304   \n",
       "892       -0.771855   -0.755586   -0.641029    1.203425    0.242947   \n",
       "...             ...         ...         ...         ...         ...   \n",
       "6274571   -0.671189   -0.328600   -0.486132   -1.655316    1.309866   \n",
       "6274572   -0.421137    0.217080   -0.258775    0.763459    0.409564   \n",
       "6274573   -0.528109   -0.704952   -0.704818    0.440965   -0.253755   \n",
       "6274574   -0.611075   -0.513717   -0.891423    0.842925    0.203037   \n",
       "6274575   -0.952069   -0.679168   -0.597603   -1.443649    0.517313   \n",
       "\n",
       "         feature_56  responder_6  \n",
       "888       -1.867182     0.397424  \n",
       "889       -1.512171     0.497049  \n",
       "890       -0.720962    -0.082120  \n",
       "891       -0.028995    -2.276462  \n",
       "892       -0.016361     0.266114  \n",
       "...             ...          ...  \n",
       "6274571    1.179617    -0.132337  \n",
       "6274572   -0.175486    -0.249584  \n",
       "6274573   -0.290343    -0.065355  \n",
       "6274574    0.301135    -0.148711  \n",
       "6274575    0.662521    -0.138548  \n",
       "\n",
       "[6118957 rows x 13 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = test_no_nan.drop(columns=['responder_0', 'responder_1', 'responder_2', 'responder_3', \n",
    "                        'responder_4', 'responder_5', 'responder_7', 'responder_8'])\n",
    "data = data.dropna()\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ca9c773f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:30.755865Z",
     "iopub.status.busy": "2024-10-26T17:01:30.755441Z",
     "iopub.status.idle": "2024-10-26T17:01:30.760997Z",
     "shell.execute_reply": "2024-10-26T17:01:30.759827Z"
    },
    "papermill": {
     "duration": 0.015208,
     "end_time": "2024-10-26T17:01:30.763477",
     "exception": false,
     "start_time": "2024-10-26T17:01:30.748269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def custom_metric(y_true,y_pred,weight):\n",
    "    weighted_r2=1-(np.sum(weight*(y_true-y_pred)**2)/np.sum(weight*y_true**2))\n",
    "    return weighted_r2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d8203221",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:01:30.776664Z",
     "iopub.status.busy": "2024-10-26T17:01:30.776241Z",
     "iopub.status.idle": "2024-10-26T17:02:04.255558Z",
     "shell.execute_reply": "2024-10-26T17:02:04.254353Z"
    },
    "papermill": {
     "duration": 33.49538,
     "end_time": "2024-10-26T17:02:04.264528",
     "exception": false,
     "start_time": "2024-10-26T17:01:30.769148",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train test split\n",
      "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.274422 seconds.\n",
      "You can set `force_col_wise=true` to remove the overhead.\n",
      "[LightGBM] [Info] Total Bins 2040\n",
      "[LightGBM] [Info] Number of data points in the train set: 4818957, number of used features: 8\n",
      "[LightGBM] [Info] Start training from score -0.008444\n",
      "Mean Squared Error: 0.5560710781811175\n"
     ]
    }
   ],
   "source": [
    "import lightgbm as lgb\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "feature_nums = [4,6,15,16,17,36,45,56]\n",
    "features = [f'feature_{x:02}' for x in feature_nums]\n",
    "\n",
    "X = data[features].fillna(3).values\n",
    "y = data['responder_6'].values\n",
    "print(\"train test split\")\n",
    "split = 1300000\n",
    "weights = data['weight'].values\n",
    "train_X, train_y, test_X, test_y, train_weight, test_weight = X[:-split], y[:-split], X[-split:], y[-split:], weights[:-split], weights[-split:]\n",
    "\n",
    "# Create LightGBM datasets\n",
    "train_data = lgb.Dataset(train_X, label=train_y, weight=train_weight)\n",
    "test_data = lgb.Dataset(test_X, label=test_y, weight=test_weight)\n",
    "\n",
    "# Set parameters\n",
    "params = {\n",
    "    'objective': 'regression',\n",
    "    'metric': 'mse',\n",
    "    'num_leaves': 31,\n",
    "    'learning_rate': 0.05,\n",
    "    'feature_fraction': 0.9\n",
    "}\n",
    "\n",
    "# Train the model\n",
    "model = lgb.train(params, train_data, num_boost_round=100, valid_sets=[test_data])\n",
    "\n",
    "# Make predictions\n",
    "train_pred = model.predict(train_X)\n",
    "test_pred = model.predict(test_X)\n",
    "\n",
    "# Evaluate the model\n",
    "mse = mean_squared_error(test_y, test_pred)\n",
    "print(f\"Mean Squared Error: {mse}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a302d331",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:02:04.279453Z",
     "iopub.status.busy": "2024-10-26T17:02:04.278327Z",
     "iopub.status.idle": "2024-10-26T17:02:04.284457Z",
     "shell.execute_reply": "2024-10-26T17:02:04.283360Z"
    },
    "papermill": {
     "duration": 0.01543,
     "end_time": "2024-10-26T17:02:04.286686",
     "exception": false,
     "start_time": "2024-10-26T17:02:04.271256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import lightgbm as lgb\n",
    "# import numpy as np\n",
    "# from sklearn.model_selection import train_test_split\n",
    "# from sklearn.metrics import mean_squared_error\n",
    "\n",
    "# feature_nums = [4,6,15,16,17,36,45,56]\n",
    "# features = [f'feature_{x:02}' for x in feature_nums]\n",
    "# # X = data[features]\n",
    "# # y = data['responder_6']\n",
    "# # # Assuming you have your features X and target y\n",
    "# # X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "\n",
    "# X=data[features].fillna(3).values\n",
    "# y=data['responder_6'].values\n",
    "# print(\"train test split\")\n",
    "# split=1300000\n",
    "# weights=data['weight'].values\n",
    "# train_X,train_y,test_X,test_y,train_weight,test_weight=X[:-split],y[:-split],X[-split:],y[-split:],weights[:-split],weights[-split:]\n",
    "\n",
    "# # Create LightGBM datasets\n",
    "# train_data = lgb.Dataset(train_X, label=y_train)\n",
    "# test_data = lgb.Dataset(test_X, label=y_test)\n",
    "\n",
    "# # Set parameters\n",
    "# params = {\n",
    "#     'objective': 'regression',  # Change this to 'binary' for binary classification\n",
    "#     'metric': 'mse',\n",
    "#     'num_leaves': 31,\n",
    "#     'learning_rate': 0.05,\n",
    "#     'feature_fraction': 0.9\n",
    "# }\n",
    "\n",
    "# # Train the model\n",
    "# model = lgb.train(params, train_data, num_boost_round=100, valid_sets=[test_data])\n",
    "\n",
    "# # Make predictions\n",
    "# y_pred = model.predict(X_test)\n",
    "\n",
    "# train_pred=model.predict(train_X)\n",
    "# test_pred=model.predict(test_X)\n",
    "\n",
    "# # Evaluate the model\n",
    "# mse = mean_squared_error(y_test, y_pred)\n",
    "# print(f\"Mean Squared Error: {mse}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a62b9d4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:02:04.300114Z",
     "iopub.status.busy": "2024-10-26T17:02:04.299713Z",
     "iopub.status.idle": "2024-10-26T17:02:04.346239Z",
     "shell.execute_reply": "2024-10-26T17:02:04.345200Z"
    },
    "papermill": {
     "duration": 0.055789,
     "end_time": "2024-10-26T17:02:04.348503",
     "exception": false,
     "start_time": "2024-10-26T17:02:04.292714",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train weighted_r2:0.006030887149624409\n",
      "test weighted_r2:0.00419532101994291\n"
     ]
    }
   ],
   "source": [
    "print(f\"train weighted_r2:{custom_metric(train_y,train_pred,weight=train_weight)}\")\n",
    "print(f\"test weighted_r2:{custom_metric(test_y,test_pred,weight=test_weight)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "12e38bdf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-26T17:02:04.362000Z",
     "iopub.status.busy": "2024-10-26T17:02:04.361620Z",
     "iopub.status.idle": "2024-10-26T17:02:04.661944Z",
     "shell.execute_reply": "2024-10-26T17:02:04.660985Z"
    },
    "papermill": {
     "duration": 0.309943,
     "end_time": "2024-10-26T17:02:04.664428",
     "exception": false,
     "start_time": "2024-10-26T17:02:04.354485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def predict(data,lags):\n",
    "    feature_nums = [4,6,15,16,17,36,45,56]\n",
    "    cols = [f'feature_{x:02}' for x in feature_nums]\n",
    "    predictions = data.select(\n",
    "        'row_id',\n",
    "        pl.lit(0.0).alias('responder_6'),\n",
    "    )\n",
    "    test_preds=model.predict(data[cols].to_pandas().fillna(3).values)\n",
    "    predictions = predictions.with_columns(pl.Series('responder_6', test_preds.ravel()))\n",
    "    return predictions\n",
    "\n",
    "inference_server = kaggle_evaluation.jane_street_inference_server.JSInferenceServer(predict)\n",
    "\n",
    "if os.getenv('KAGGLE_IS_COMPETITION_RERUN'):\n",
    "    inference_server.serve()\n",
    "else:\n",
    "    inference_server.run_local_gateway(\n",
    "        (\n",
    "            '/kaggle/input/jane-street-real-time-market-data-forecasting/test.parquet',\n",
    "            '/kaggle/input/jane-street-real-time-market-data-forecasting/lags.parquet',\n",
    "        )\n",
    "    )"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9871156,
     "sourceId": 84493,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 68.284467,
   "end_time": "2024-10-26T17:02:05.592417",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-10-26T17:00:57.307950",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
