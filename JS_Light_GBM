{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":84493,"databundleVersionId":9871156,"sourceType":"competition"}],"dockerImageVersionId":30786,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-26T16:51:21.737441Z","iopub.execute_input":"2024-10-26T16:51:21.738112Z","iopub.status.idle":"2024-10-26T16:51:21.767628Z","shell.execute_reply.started":"2024-10-26T16:51:21.738032Z","shell.execute_reply":"2024-10-26T16:51:21.765901Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"/kaggle/input/jane-street-real-time-market-data-forecasting/responders.csv\n/kaggle/input/jane-street-real-time-market-data-forecasting/sample_submission.csv\n/kaggle/input/jane-street-real-time-market-data-forecasting/features.csv\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=4/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=5/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=6/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=3/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=1/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=8/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=2/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=0/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=7/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=9/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/lags.parquet/date_id=0/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/test.parquet/date_id=0/part-0.parquet\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/jane_street_gateway.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/jane_street_inference_server.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/__init__.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/templates.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/base_gateway.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/relay.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/kaggle_evaluation.proto\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/__init__.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/kaggle_evaluation_pb2.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/kaggle_evaluation_pb2_grpc.py\n/kaggle/input/jane-street-real-time-market-data-forecasting/kaggle_evaluation/core/generated/__init__.py\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport polars as pl\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom pathlib import Path\nfrom tqdm import tqdm\nfrom functools import reduce\nfrom sklearn.linear_model import Ridge\nimport kaggle_evaluation.jane_street_inference_server\n\nfrom scipy.stats import pearsonr, spearmanr, kendalltau","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:21.770123Z","iopub.execute_input":"2024-10-26T16:51:21.770801Z","iopub.status.idle":"2024-10-26T16:51:21.787330Z","shell.execute_reply.started":"2024-10-26T16:51:21.770730Z","shell.execute_reply":"2024-10-26T16:51:21.785373Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"N_PARTITION = 10\n\n# train_parquets = [DATA_DIR / f\"train.parquet/partition_id={i}/part-0.parquet\" for i in range(N_PARTITION)]\ntrain_parquets = \"part-0.parquet\"\n\nTEST_PARQUET =\"/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet/partition_id=9/part-0.parquet\"\n\ntest = pd.read_parquet(TEST_PARQUET)\n\ntest","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:21.789462Z","iopub.execute_input":"2024-10-26T16:51:21.790087Z","iopub.status.idle":"2024-10-26T16:51:32.351518Z","shell.execute_reply.started":"2024-10-26T16:51:21.789990Z","shell.execute_reply":"2024-10-26T16:51:32.350091Z"},"trusted":true},"execution_count":40,"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"         date_id  time_id  symbol_id    weight  feature_00  feature_01  \\\n0           1530        0          0  3.084694    1.153571    1.563784   \n1           1530        0          1  2.232906    0.553354    1.730064   \n2           1530        0          2  2.404948    1.532503    2.095852   \n3           1530        0          3  1.986533    0.647099    1.687460   \n4           1530        0          4  2.742601    1.096778    1.551411   \n...          ...      ...        ...       ...         ...         ...   \n6274571     1698      967         34  3.242493    2.525160   -0.721981   \n6274572     1698      967         35  1.079139    1.857906   -0.790646   \n6274573     1698      967         36  1.033172    2.515527   -0.672298   \n6274574     1698      967         37  1.243116    2.663298   -0.889112   \n6274575     1698      967         38  3.193685    2.728506   -0.745238   \n\n         feature_02  feature_03  feature_04  feature_05  ...  feature_78  \\\n0          0.697396    0.756759    2.580965    0.171311  ...    0.999516   \n1          0.990195    0.611490    2.023031    0.319015  ...    0.160609   \n2          0.919688    0.583715    2.330047    0.337096  ...   -0.065761   \n3          0.569406    1.061679    2.444131    0.150487  ...    0.526284   \n4          0.632113    0.368218    2.181873    0.214604  ...   -0.965623   \n...             ...         ...         ...         ...  ...         ...   \n6274571    2.544025    2.477615    0.417557    0.785812  ...    0.016936   \n6274572    2.745439    2.339877    0.845065    0.651370  ...    0.050860   \n6274573    2.289250    2.521592    0.255077    0.919892  ...    0.152333   \n6274574    2.313155    3.101428    0.324454    0.618944  ...   -0.029483   \n6274575    2.788789    2.343393    0.454731    0.862839  ...   -0.247774   \n\n         responder_0  responder_1  responder_2  responder_3  responder_4  \\\n0           0.417462     0.323897     0.601499     2.074103     0.746552   \n1          -0.318671    -0.399384    -0.635306     2.092151     0.342582   \n2           0.200878    -0.006571     0.518870    -0.344441     0.641694   \n3          -0.349773    -0.235901    -0.428956    -1.903627    -1.214619   \n4          -0.373938    -0.209282    -0.095182    -1.598217     0.968505   \n...              ...          ...          ...          ...          ...   \n6274571     0.243475     0.166927     0.384940    -0.174297    -0.066046   \n6274572     0.850152     0.909382     1.015314     0.235962     0.122539   \n6274573     0.395684    -0.292574    -3.215846    -0.535129    -0.178484   \n6274574     1.925987     0.479394     3.621867    -0.107114    -0.063599   \n6274575     1.228778     0.512562    -0.050865     0.160883     0.080756   \n\n         responder_5  responder_6  responder_7  responder_8  \n0           0.552013     3.071231     0.914794     0.997124  \n1           0.757289     1.979042     0.967537     1.219739  \n2          -0.646040    -0.506260     0.739797    -2.041514  \n3          -0.469500    -2.590589    -0.946317    -0.390001  \n4          -0.705594    -1.579623     0.954296    -1.805623  \n...              ...          ...          ...          ...  \n6274571    -0.038767    -0.132337    -0.022426    -0.252461  \n6274572     0.099559    -0.249584    -0.123571    -0.460630  \n6274573    -1.808150    -0.065355    -0.000367    -0.125170  \n6274574     1.204755    -0.148711    -0.026583    -0.256395  \n6274575    -0.078237    -0.138548    -0.038771    -0.211940  \n\n[6274576 rows x 92 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date_id</th>\n      <th>time_id</th>\n      <th>symbol_id</th>\n      <th>weight</th>\n      <th>feature_00</th>\n      <th>feature_01</th>\n      <th>feature_02</th>\n      <th>feature_03</th>\n      <th>feature_04</th>\n      <th>feature_05</th>\n      <th>...</th>\n      <th>feature_78</th>\n      <th>responder_0</th>\n      <th>responder_1</th>\n      <th>responder_2</th>\n      <th>responder_3</th>\n      <th>responder_4</th>\n      <th>responder_5</th>\n      <th>responder_6</th>\n      <th>responder_7</th>\n      <th>responder_8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3.084694</td>\n      <td>1.153571</td>\n      <td>1.563784</td>\n      <td>0.697396</td>\n      <td>0.756759</td>\n      <td>2.580965</td>\n      <td>0.171311</td>\n      <td>...</td>\n      <td>0.999516</td>\n      <td>0.417462</td>\n      <td>0.323897</td>\n      <td>0.601499</td>\n      <td>2.074103</td>\n      <td>0.746552</td>\n      <td>0.552013</td>\n      <td>3.071231</td>\n      <td>0.914794</td>\n      <td>0.997124</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2.232906</td>\n      <td>0.553354</td>\n      <td>1.730064</td>\n      <td>0.990195</td>\n      <td>0.611490</td>\n      <td>2.023031</td>\n      <td>0.319015</td>\n      <td>...</td>\n      <td>0.160609</td>\n      <td>-0.318671</td>\n      <td>-0.399384</td>\n      <td>-0.635306</td>\n      <td>2.092151</td>\n      <td>0.342582</td>\n      <td>0.757289</td>\n      <td>1.979042</td>\n      <td>0.967537</td>\n      <td>1.219739</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2.404948</td>\n      <td>1.532503</td>\n      <td>2.095852</td>\n      <td>0.919688</td>\n      <td>0.583715</td>\n      <td>2.330047</td>\n      <td>0.337096</td>\n      <td>...</td>\n      <td>-0.065761</td>\n      <td>0.200878</td>\n      <td>-0.006571</td>\n      <td>0.518870</td>\n      <td>-0.344441</td>\n      <td>0.641694</td>\n      <td>-0.646040</td>\n      <td>-0.506260</td>\n      <td>0.739797</td>\n      <td>-2.041514</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1.986533</td>\n      <td>0.647099</td>\n      <td>1.687460</td>\n      <td>0.569406</td>\n      <td>1.061679</td>\n      <td>2.444131</td>\n      <td>0.150487</td>\n      <td>...</td>\n      <td>0.526284</td>\n      <td>-0.349773</td>\n      <td>-0.235901</td>\n      <td>-0.428956</td>\n      <td>-1.903627</td>\n      <td>-1.214619</td>\n      <td>-0.469500</td>\n      <td>-2.590589</td>\n      <td>-0.946317</td>\n      <td>-0.390001</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2.742601</td>\n      <td>1.096778</td>\n      <td>1.551411</td>\n      <td>0.632113</td>\n      <td>0.368218</td>\n      <td>2.181873</td>\n      <td>0.214604</td>\n      <td>...</td>\n      <td>-0.965623</td>\n      <td>-0.373938</td>\n      <td>-0.209282</td>\n      <td>-0.095182</td>\n      <td>-1.598217</td>\n      <td>0.968505</td>\n      <td>-0.705594</td>\n      <td>-1.579623</td>\n      <td>0.954296</td>\n      <td>-1.805623</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>6274571</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>34</td>\n      <td>3.242493</td>\n      <td>2.525160</td>\n      <td>-0.721981</td>\n      <td>2.544025</td>\n      <td>2.477615</td>\n      <td>0.417557</td>\n      <td>0.785812</td>\n      <td>...</td>\n      <td>0.016936</td>\n      <td>0.243475</td>\n      <td>0.166927</td>\n      <td>0.384940</td>\n      <td>-0.174297</td>\n      <td>-0.066046</td>\n      <td>-0.038767</td>\n      <td>-0.132337</td>\n      <td>-0.022426</td>\n      <td>-0.252461</td>\n    </tr>\n    <tr>\n      <th>6274572</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>35</td>\n      <td>1.079139</td>\n      <td>1.857906</td>\n      <td>-0.790646</td>\n      <td>2.745439</td>\n      <td>2.339877</td>\n      <td>0.845065</td>\n      <td>0.651370</td>\n      <td>...</td>\n      <td>0.050860</td>\n      <td>0.850152</td>\n      <td>0.909382</td>\n      <td>1.015314</td>\n      <td>0.235962</td>\n      <td>0.122539</td>\n      <td>0.099559</td>\n      <td>-0.249584</td>\n      <td>-0.123571</td>\n      <td>-0.460630</td>\n    </tr>\n    <tr>\n      <th>6274573</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>36</td>\n      <td>1.033172</td>\n      <td>2.515527</td>\n      <td>-0.672298</td>\n      <td>2.289250</td>\n      <td>2.521592</td>\n      <td>0.255077</td>\n      <td>0.919892</td>\n      <td>...</td>\n      <td>0.152333</td>\n      <td>0.395684</td>\n      <td>-0.292574</td>\n      <td>-3.215846</td>\n      <td>-0.535129</td>\n      <td>-0.178484</td>\n      <td>-1.808150</td>\n      <td>-0.065355</td>\n      <td>-0.000367</td>\n      <td>-0.125170</td>\n    </tr>\n    <tr>\n      <th>6274574</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>37</td>\n      <td>1.243116</td>\n      <td>2.663298</td>\n      <td>-0.889112</td>\n      <td>2.313155</td>\n      <td>3.101428</td>\n      <td>0.324454</td>\n      <td>0.618944</td>\n      <td>...</td>\n      <td>-0.029483</td>\n      <td>1.925987</td>\n      <td>0.479394</td>\n      <td>3.621867</td>\n      <td>-0.107114</td>\n      <td>-0.063599</td>\n      <td>1.204755</td>\n      <td>-0.148711</td>\n      <td>-0.026583</td>\n      <td>-0.256395</td>\n    </tr>\n    <tr>\n      <th>6274575</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>38</td>\n      <td>3.193685</td>\n      <td>2.728506</td>\n      <td>-0.745238</td>\n      <td>2.788789</td>\n      <td>2.343393</td>\n      <td>0.454731</td>\n      <td>0.862839</td>\n      <td>...</td>\n      <td>-0.247774</td>\n      <td>1.228778</td>\n      <td>0.512562</td>\n      <td>-0.050865</td>\n      <td>0.160883</td>\n      <td>0.080756</td>\n      <td>-0.078237</td>\n      <td>-0.138548</td>\n      <td>-0.038771</td>\n      <td>-0.211940</td>\n    </tr>\n  </tbody>\n</table>\n<p>6274576 rows × 92 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"feature_cols = [f'feature_{x:02}' for x in range(79)]\nresponder_cols = [f'responder_{i}' for i in range(9)]","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:32.354742Z","iopub.execute_input":"2024-10-26T16:51:32.355174Z","iopub.status.idle":"2024-10-26T16:51:32.361148Z","shell.execute_reply.started":"2024-10-26T16:51:32.355112Z","shell.execute_reply":"2024-10-26T16:51:32.359957Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"corr_with_responder6 = test[feature_cols].corrwith(test['responder_6'])\n\nlow_cor_feat = corr_with_responder6[abs(corr_with_responder6) < 0.016].index\ntest_cleaned = test.drop(columns=low_cor_feat)\ntest_no_nan = test_cleaned.dropna(axis=1, how='all')\ntest_no_nan","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:32.362432Z","iopub.execute_input":"2024-10-26T16:51:32.362792Z","iopub.status.idle":"2024-10-26T16:51:49.010588Z","shell.execute_reply.started":"2024-10-26T16:51:32.362746Z","shell.execute_reply":"2024-10-26T16:51:49.009137Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"         date_id  time_id  symbol_id    weight  feature_04  feature_06  \\\n0           1530        0          0  3.084694    2.580965    1.126353   \n1           1530        0          1  2.232906    2.023031    1.183371   \n2           1530        0          2  2.404948    2.330047    1.262236   \n3           1530        0          3  1.986533    2.444131    0.896543   \n4           1530        0          4  2.742601    2.181873    1.194230   \n...          ...      ...        ...       ...         ...         ...   \n6274571     1698      967         34  3.242493    0.417557    1.117796   \n6274572     1698      967         35  1.079139    0.845065    1.180301   \n6274573     1698      967         36  1.033172    0.255077    1.172018   \n6274574     1698      967         37  1.243116    0.324454    1.185663   \n6274575     1698      967         38  3.193685    0.454731    0.964795   \n\n         feature_15  feature_16  feature_17  feature_36  ...  feature_56  \\\n0               NaN   -0.203291         NaN   -0.507707  ...   -1.227900   \n1               NaN   -0.318528         NaN    2.071485  ...   -2.354893   \n2               NaN   -0.531873         NaN   -0.575270  ...   -2.190607   \n3               NaN    0.183964         NaN    1.663553  ...   -0.760486   \n4               NaN   -0.638341         NaN   -0.951203  ...   -1.490257   \n...             ...         ...         ...         ...  ...         ...   \n6274571   -0.671189   -0.328600   -0.486132   -1.655316  ...    1.179617   \n6274572   -0.421137    0.217080   -0.258775    0.763459  ...   -0.175486   \n6274573   -0.528109   -0.704952   -0.704818    0.440965  ...   -0.290343   \n6274574   -0.611075   -0.513717   -0.891423    0.842925  ...    0.301135   \n6274575   -0.952069   -0.679168   -0.597603   -1.443649  ...    0.662521   \n\n         responder_0  responder_1  responder_2  responder_3  responder_4  \\\n0           0.417462     0.323897     0.601499     2.074103     0.746552   \n1          -0.318671    -0.399384    -0.635306     2.092151     0.342582   \n2           0.200878    -0.006571     0.518870    -0.344441     0.641694   \n3          -0.349773    -0.235901    -0.428956    -1.903627    -1.214619   \n4          -0.373938    -0.209282    -0.095182    -1.598217     0.968505   \n...              ...          ...          ...          ...          ...   \n6274571     0.243475     0.166927     0.384940    -0.174297    -0.066046   \n6274572     0.850152     0.909382     1.015314     0.235962     0.122539   \n6274573     0.395684    -0.292574    -3.215846    -0.535129    -0.178484   \n6274574     1.925987     0.479394     3.621867    -0.107114    -0.063599   \n6274575     1.228778     0.512562    -0.050865     0.160883     0.080756   \n\n         responder_5  responder_6  responder_7  responder_8  \n0           0.552013     3.071231     0.914794     0.997124  \n1           0.757289     1.979042     0.967537     1.219739  \n2          -0.646040    -0.506260     0.739797    -2.041514  \n3          -0.469500    -2.590589    -0.946317    -0.390001  \n4          -0.705594    -1.579623     0.954296    -1.805623  \n...              ...          ...          ...          ...  \n6274571    -0.038767    -0.132337    -0.022426    -0.252461  \n6274572     0.099559    -0.249584    -0.123571    -0.460630  \n6274573    -1.808150    -0.065355    -0.000367    -0.125170  \n6274574     1.204755    -0.148711    -0.026583    -0.256395  \n6274575    -0.078237    -0.138548    -0.038771    -0.211940  \n\n[6274576 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date_id</th>\n      <th>time_id</th>\n      <th>symbol_id</th>\n      <th>weight</th>\n      <th>feature_04</th>\n      <th>feature_06</th>\n      <th>feature_15</th>\n      <th>feature_16</th>\n      <th>feature_17</th>\n      <th>feature_36</th>\n      <th>...</th>\n      <th>feature_56</th>\n      <th>responder_0</th>\n      <th>responder_1</th>\n      <th>responder_2</th>\n      <th>responder_3</th>\n      <th>responder_4</th>\n      <th>responder_5</th>\n      <th>responder_6</th>\n      <th>responder_7</th>\n      <th>responder_8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3.084694</td>\n      <td>2.580965</td>\n      <td>1.126353</td>\n      <td>NaN</td>\n      <td>-0.203291</td>\n      <td>NaN</td>\n      <td>-0.507707</td>\n      <td>...</td>\n      <td>-1.227900</td>\n      <td>0.417462</td>\n      <td>0.323897</td>\n      <td>0.601499</td>\n      <td>2.074103</td>\n      <td>0.746552</td>\n      <td>0.552013</td>\n      <td>3.071231</td>\n      <td>0.914794</td>\n      <td>0.997124</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2.232906</td>\n      <td>2.023031</td>\n      <td>1.183371</td>\n      <td>NaN</td>\n      <td>-0.318528</td>\n      <td>NaN</td>\n      <td>2.071485</td>\n      <td>...</td>\n      <td>-2.354893</td>\n      <td>-0.318671</td>\n      <td>-0.399384</td>\n      <td>-0.635306</td>\n      <td>2.092151</td>\n      <td>0.342582</td>\n      <td>0.757289</td>\n      <td>1.979042</td>\n      <td>0.967537</td>\n      <td>1.219739</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2.404948</td>\n      <td>2.330047</td>\n      <td>1.262236</td>\n      <td>NaN</td>\n      <td>-0.531873</td>\n      <td>NaN</td>\n      <td>-0.575270</td>\n      <td>...</td>\n      <td>-2.190607</td>\n      <td>0.200878</td>\n      <td>-0.006571</td>\n      <td>0.518870</td>\n      <td>-0.344441</td>\n      <td>0.641694</td>\n      <td>-0.646040</td>\n      <td>-0.506260</td>\n      <td>0.739797</td>\n      <td>-2.041514</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1.986533</td>\n      <td>2.444131</td>\n      <td>0.896543</td>\n      <td>NaN</td>\n      <td>0.183964</td>\n      <td>NaN</td>\n      <td>1.663553</td>\n      <td>...</td>\n      <td>-0.760486</td>\n      <td>-0.349773</td>\n      <td>-0.235901</td>\n      <td>-0.428956</td>\n      <td>-1.903627</td>\n      <td>-1.214619</td>\n      <td>-0.469500</td>\n      <td>-2.590589</td>\n      <td>-0.946317</td>\n      <td>-0.390001</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1530</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2.742601</td>\n      <td>2.181873</td>\n      <td>1.194230</td>\n      <td>NaN</td>\n      <td>-0.638341</td>\n      <td>NaN</td>\n      <td>-0.951203</td>\n      <td>...</td>\n      <td>-1.490257</td>\n      <td>-0.373938</td>\n      <td>-0.209282</td>\n      <td>-0.095182</td>\n      <td>-1.598217</td>\n      <td>0.968505</td>\n      <td>-0.705594</td>\n      <td>-1.579623</td>\n      <td>0.954296</td>\n      <td>-1.805623</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>6274571</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>34</td>\n      <td>3.242493</td>\n      <td>0.417557</td>\n      <td>1.117796</td>\n      <td>-0.671189</td>\n      <td>-0.328600</td>\n      <td>-0.486132</td>\n      <td>-1.655316</td>\n      <td>...</td>\n      <td>1.179617</td>\n      <td>0.243475</td>\n      <td>0.166927</td>\n      <td>0.384940</td>\n      <td>-0.174297</td>\n      <td>-0.066046</td>\n      <td>-0.038767</td>\n      <td>-0.132337</td>\n      <td>-0.022426</td>\n      <td>-0.252461</td>\n    </tr>\n    <tr>\n      <th>6274572</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>35</td>\n      <td>1.079139</td>\n      <td>0.845065</td>\n      <td>1.180301</td>\n      <td>-0.421137</td>\n      <td>0.217080</td>\n      <td>-0.258775</td>\n      <td>0.763459</td>\n      <td>...</td>\n      <td>-0.175486</td>\n      <td>0.850152</td>\n      <td>0.909382</td>\n      <td>1.015314</td>\n      <td>0.235962</td>\n      <td>0.122539</td>\n      <td>0.099559</td>\n      <td>-0.249584</td>\n      <td>-0.123571</td>\n      <td>-0.460630</td>\n    </tr>\n    <tr>\n      <th>6274573</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>36</td>\n      <td>1.033172</td>\n      <td>0.255077</td>\n      <td>1.172018</td>\n      <td>-0.528109</td>\n      <td>-0.704952</td>\n      <td>-0.704818</td>\n      <td>0.440965</td>\n      <td>...</td>\n      <td>-0.290343</td>\n      <td>0.395684</td>\n      <td>-0.292574</td>\n      <td>-3.215846</td>\n      <td>-0.535129</td>\n      <td>-0.178484</td>\n      <td>-1.808150</td>\n      <td>-0.065355</td>\n      <td>-0.000367</td>\n      <td>-0.125170</td>\n    </tr>\n    <tr>\n      <th>6274574</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>37</td>\n      <td>1.243116</td>\n      <td>0.324454</td>\n      <td>1.185663</td>\n      <td>-0.611075</td>\n      <td>-0.513717</td>\n      <td>-0.891423</td>\n      <td>0.842925</td>\n      <td>...</td>\n      <td>0.301135</td>\n      <td>1.925987</td>\n      <td>0.479394</td>\n      <td>3.621867</td>\n      <td>-0.107114</td>\n      <td>-0.063599</td>\n      <td>1.204755</td>\n      <td>-0.148711</td>\n      <td>-0.026583</td>\n      <td>-0.256395</td>\n    </tr>\n    <tr>\n      <th>6274575</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>38</td>\n      <td>3.193685</td>\n      <td>0.454731</td>\n      <td>0.964795</td>\n      <td>-0.952069</td>\n      <td>-0.679168</td>\n      <td>-0.597603</td>\n      <td>-1.443649</td>\n      <td>...</td>\n      <td>0.662521</td>\n      <td>1.228778</td>\n      <td>0.512562</td>\n      <td>-0.050865</td>\n      <td>0.160883</td>\n      <td>0.080756</td>\n      <td>-0.078237</td>\n      <td>-0.138548</td>\n      <td>-0.038771</td>\n      <td>-0.211940</td>\n    </tr>\n  </tbody>\n</table>\n<p>6274576 rows × 21 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_no_nan.groupby(['date_id', 'time_id'])\ntest_no_nan.set_index(['date_id', 'time_id', 'symbol_id'])","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:49.012514Z","iopub.execute_input":"2024-10-26T16:51:49.013069Z","iopub.status.idle":"2024-10-26T16:51:49.675047Z","shell.execute_reply.started":"2024-10-26T16:51:49.012984Z","shell.execute_reply":"2024-10-26T16:51:49.673630Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"                             weight  feature_04  feature_06  feature_15  \\\ndate_id time_id symbol_id                                                 \n1530    0       0          3.084694    2.580965    1.126353         NaN   \n                1          2.232906    2.023031    1.183371         NaN   \n                2          2.404948    2.330047    1.262236         NaN   \n                3          1.986533    2.444131    0.896543         NaN   \n                4          2.742601    2.181873    1.194230         NaN   \n...                             ...         ...         ...         ...   \n1698    967     34         3.242493    0.417557    1.117796   -0.671189   \n                35         1.079139    0.845065    1.180301   -0.421137   \n                36         1.033172    0.255077    1.172018   -0.528109   \n                37         1.243116    0.324454    1.185663   -0.611075   \n                38         3.193685    0.454731    0.964795   -0.952069   \n\n                           feature_16  feature_17  feature_36  feature_45  \\\ndate_id time_id symbol_id                                                   \n1530    0       0           -0.203291         NaN   -0.507707   -1.967165   \n                1           -0.318528         NaN    2.071485   -1.304763   \n                2           -0.531873         NaN   -0.575270   -1.019831   \n                3            0.183964         NaN    1.663553   -0.693391   \n                4           -0.638341         NaN   -0.951203   -1.331183   \n...                               ...         ...         ...         ...   \n1698    967     34          -0.328600   -0.486132   -1.655316    1.309866   \n                35           0.217080   -0.258775    0.763459    0.409564   \n                36          -0.704952   -0.704818    0.440965   -0.253755   \n                37          -0.513717   -0.891423    0.842925    0.203037   \n                38          -0.679168   -0.597603   -1.443649    0.517313   \n\n                           feature_56  responder_0  responder_1  responder_2  \\\ndate_id time_id symbol_id                                                      \n1530    0       0           -1.227900     0.417462     0.323897     0.601499   \n                1           -2.354893    -0.318671    -0.399384    -0.635306   \n                2           -2.190607     0.200878    -0.006571     0.518870   \n                3           -0.760486    -0.349773    -0.235901    -0.428956   \n                4           -1.490257    -0.373938    -0.209282    -0.095182   \n...                               ...          ...          ...          ...   \n1698    967     34           1.179617     0.243475     0.166927     0.384940   \n                35          -0.175486     0.850152     0.909382     1.015314   \n                36          -0.290343     0.395684    -0.292574    -3.215846   \n                37           0.301135     1.925987     0.479394     3.621867   \n                38           0.662521     1.228778     0.512562    -0.050865   \n\n                           responder_3  responder_4  responder_5  responder_6  \\\ndate_id time_id symbol_id                                                       \n1530    0       0             2.074103     0.746552     0.552013     3.071231   \n                1             2.092151     0.342582     0.757289     1.979042   \n                2            -0.344441     0.641694    -0.646040    -0.506260   \n                3            -1.903627    -1.214619    -0.469500    -2.590589   \n                4            -1.598217     0.968505    -0.705594    -1.579623   \n...                                ...          ...          ...          ...   \n1698    967     34           -0.174297    -0.066046    -0.038767    -0.132337   \n                35            0.235962     0.122539     0.099559    -0.249584   \n                36           -0.535129    -0.178484    -1.808150    -0.065355   \n                37           -0.107114    -0.063599     1.204755    -0.148711   \n                38            0.160883     0.080756    -0.078237    -0.138548   \n\n                           responder_7  responder_8  \ndate_id time_id symbol_id                            \n1530    0       0             0.914794     0.997124  \n                1             0.967537     1.219739  \n                2             0.739797    -2.041514  \n                3            -0.946317    -0.390001  \n                4             0.954296    -1.805623  \n...                                ...          ...  \n1698    967     34           -0.022426    -0.252461  \n                35           -0.123571    -0.460630  \n                36           -0.000367    -0.125170  \n                37           -0.026583    -0.256395  \n                38           -0.038771    -0.211940  \n\n[6274576 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>weight</th>\n      <th>feature_04</th>\n      <th>feature_06</th>\n      <th>feature_15</th>\n      <th>feature_16</th>\n      <th>feature_17</th>\n      <th>feature_36</th>\n      <th>feature_45</th>\n      <th>feature_56</th>\n      <th>responder_0</th>\n      <th>responder_1</th>\n      <th>responder_2</th>\n      <th>responder_3</th>\n      <th>responder_4</th>\n      <th>responder_5</th>\n      <th>responder_6</th>\n      <th>responder_7</th>\n      <th>responder_8</th>\n    </tr>\n    <tr>\n      <th>date_id</th>\n      <th>time_id</th>\n      <th>symbol_id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">1530</th>\n      <th rowspan=\"5\" valign=\"top\">0</th>\n      <th>0</th>\n      <td>3.084694</td>\n      <td>2.580965</td>\n      <td>1.126353</td>\n      <td>NaN</td>\n      <td>-0.203291</td>\n      <td>NaN</td>\n      <td>-0.507707</td>\n      <td>-1.967165</td>\n      <td>-1.227900</td>\n      <td>0.417462</td>\n      <td>0.323897</td>\n      <td>0.601499</td>\n      <td>2.074103</td>\n      <td>0.746552</td>\n      <td>0.552013</td>\n      <td>3.071231</td>\n      <td>0.914794</td>\n      <td>0.997124</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2.232906</td>\n      <td>2.023031</td>\n      <td>1.183371</td>\n      <td>NaN</td>\n      <td>-0.318528</td>\n      <td>NaN</td>\n      <td>2.071485</td>\n      <td>-1.304763</td>\n      <td>-2.354893</td>\n      <td>-0.318671</td>\n      <td>-0.399384</td>\n      <td>-0.635306</td>\n      <td>2.092151</td>\n      <td>0.342582</td>\n      <td>0.757289</td>\n      <td>1.979042</td>\n      <td>0.967537</td>\n      <td>1.219739</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2.404948</td>\n      <td>2.330047</td>\n      <td>1.262236</td>\n      <td>NaN</td>\n      <td>-0.531873</td>\n      <td>NaN</td>\n      <td>-0.575270</td>\n      <td>-1.019831</td>\n      <td>-2.190607</td>\n      <td>0.200878</td>\n      <td>-0.006571</td>\n      <td>0.518870</td>\n      <td>-0.344441</td>\n      <td>0.641694</td>\n      <td>-0.646040</td>\n      <td>-0.506260</td>\n      <td>0.739797</td>\n      <td>-2.041514</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.986533</td>\n      <td>2.444131</td>\n      <td>0.896543</td>\n      <td>NaN</td>\n      <td>0.183964</td>\n      <td>NaN</td>\n      <td>1.663553</td>\n      <td>-0.693391</td>\n      <td>-0.760486</td>\n      <td>-0.349773</td>\n      <td>-0.235901</td>\n      <td>-0.428956</td>\n      <td>-1.903627</td>\n      <td>-1.214619</td>\n      <td>-0.469500</td>\n      <td>-2.590589</td>\n      <td>-0.946317</td>\n      <td>-0.390001</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.742601</td>\n      <td>2.181873</td>\n      <td>1.194230</td>\n      <td>NaN</td>\n      <td>-0.638341</td>\n      <td>NaN</td>\n      <td>-0.951203</td>\n      <td>-1.331183</td>\n      <td>-1.490257</td>\n      <td>-0.373938</td>\n      <td>-0.209282</td>\n      <td>-0.095182</td>\n      <td>-1.598217</td>\n      <td>0.968505</td>\n      <td>-0.705594</td>\n      <td>-1.579623</td>\n      <td>0.954296</td>\n      <td>-1.805623</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">1698</th>\n      <th rowspan=\"5\" valign=\"top\">967</th>\n      <th>34</th>\n      <td>3.242493</td>\n      <td>0.417557</td>\n      <td>1.117796</td>\n      <td>-0.671189</td>\n      <td>-0.328600</td>\n      <td>-0.486132</td>\n      <td>-1.655316</td>\n      <td>1.309866</td>\n      <td>1.179617</td>\n      <td>0.243475</td>\n      <td>0.166927</td>\n      <td>0.384940</td>\n      <td>-0.174297</td>\n      <td>-0.066046</td>\n      <td>-0.038767</td>\n      <td>-0.132337</td>\n      <td>-0.022426</td>\n      <td>-0.252461</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>1.079139</td>\n      <td>0.845065</td>\n      <td>1.180301</td>\n      <td>-0.421137</td>\n      <td>0.217080</td>\n      <td>-0.258775</td>\n      <td>0.763459</td>\n      <td>0.409564</td>\n      <td>-0.175486</td>\n      <td>0.850152</td>\n      <td>0.909382</td>\n      <td>1.015314</td>\n      <td>0.235962</td>\n      <td>0.122539</td>\n      <td>0.099559</td>\n      <td>-0.249584</td>\n      <td>-0.123571</td>\n      <td>-0.460630</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>1.033172</td>\n      <td>0.255077</td>\n      <td>1.172018</td>\n      <td>-0.528109</td>\n      <td>-0.704952</td>\n      <td>-0.704818</td>\n      <td>0.440965</td>\n      <td>-0.253755</td>\n      <td>-0.290343</td>\n      <td>0.395684</td>\n      <td>-0.292574</td>\n      <td>-3.215846</td>\n      <td>-0.535129</td>\n      <td>-0.178484</td>\n      <td>-1.808150</td>\n      <td>-0.065355</td>\n      <td>-0.000367</td>\n      <td>-0.125170</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>1.243116</td>\n      <td>0.324454</td>\n      <td>1.185663</td>\n      <td>-0.611075</td>\n      <td>-0.513717</td>\n      <td>-0.891423</td>\n      <td>0.842925</td>\n      <td>0.203037</td>\n      <td>0.301135</td>\n      <td>1.925987</td>\n      <td>0.479394</td>\n      <td>3.621867</td>\n      <td>-0.107114</td>\n      <td>-0.063599</td>\n      <td>1.204755</td>\n      <td>-0.148711</td>\n      <td>-0.026583</td>\n      <td>-0.256395</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>3.193685</td>\n      <td>0.454731</td>\n      <td>0.964795</td>\n      <td>-0.952069</td>\n      <td>-0.679168</td>\n      <td>-0.597603</td>\n      <td>-1.443649</td>\n      <td>0.517313</td>\n      <td>0.662521</td>\n      <td>1.228778</td>\n      <td>0.512562</td>\n      <td>-0.050865</td>\n      <td>0.160883</td>\n      <td>0.080756</td>\n      <td>-0.078237</td>\n      <td>-0.138548</td>\n      <td>-0.038771</td>\n      <td>-0.211940</td>\n    </tr>\n  </tbody>\n</table>\n<p>6274576 rows × 18 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data = test_no_nan.drop(columns=['responder_0', 'responder_1', 'responder_2', 'responder_3', \n                        'responder_4', 'responder_5', 'responder_7', 'responder_8'])\ndata = data.dropna()\ndata","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:49.676808Z","iopub.execute_input":"2024-10-26T16:51:49.677316Z","iopub.status.idle":"2024-10-26T16:51:50.262662Z","shell.execute_reply.started":"2024-10-26T16:51:49.677259Z","shell.execute_reply":"2024-10-26T16:51:50.261121Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"         date_id  time_id  symbol_id    weight  feature_04  feature_06  \\\n888         1530       24          0  3.084694    1.915233   -0.113710   \n889         1530       24          1  2.232906    2.479117   -0.120363   \n890         1530       24          2  2.404948    1.518317   -0.134236   \n891         1530       24          3  1.986533    2.414281   -0.207788   \n892         1530       24          4  2.742601    2.430181   -0.101107   \n...          ...      ...        ...       ...         ...         ...   \n6274571     1698      967         34  3.242493    0.417557    1.117796   \n6274572     1698      967         35  1.079139    0.845065    1.180301   \n6274573     1698      967         36  1.033172    0.255077    1.172018   \n6274574     1698      967         37  1.243116    0.324454    1.185663   \n6274575     1698      967         38  3.193685    0.454731    0.964795   \n\n         feature_15  feature_16  feature_17  feature_36  feature_45  \\\n888       -0.582334   -0.677112   -0.665190   -2.158748   -0.962597   \n889       -0.615883   -0.491795   -0.647937    1.323964   -0.962650   \n890       -0.676956   -0.841851   -0.749244    0.687150   -0.541013   \n891       -0.636845   -0.812996   -0.604094    2.074668    0.096304   \n892       -0.771855   -0.755586   -0.641029    1.203425    0.242947   \n...             ...         ...         ...         ...         ...   \n6274571   -0.671189   -0.328600   -0.486132   -1.655316    1.309866   \n6274572   -0.421137    0.217080   -0.258775    0.763459    0.409564   \n6274573   -0.528109   -0.704952   -0.704818    0.440965   -0.253755   \n6274574   -0.611075   -0.513717   -0.891423    0.842925    0.203037   \n6274575   -0.952069   -0.679168   -0.597603   -1.443649    0.517313   \n\n         feature_56  responder_6  \n888       -1.867182     0.397424  \n889       -1.512171     0.497049  \n890       -0.720962    -0.082120  \n891       -0.028995    -2.276462  \n892       -0.016361     0.266114  \n...             ...          ...  \n6274571    1.179617    -0.132337  \n6274572   -0.175486    -0.249584  \n6274573   -0.290343    -0.065355  \n6274574    0.301135    -0.148711  \n6274575    0.662521    -0.138548  \n\n[6118957 rows x 13 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date_id</th>\n      <th>time_id</th>\n      <th>symbol_id</th>\n      <th>weight</th>\n      <th>feature_04</th>\n      <th>feature_06</th>\n      <th>feature_15</th>\n      <th>feature_16</th>\n      <th>feature_17</th>\n      <th>feature_36</th>\n      <th>feature_45</th>\n      <th>feature_56</th>\n      <th>responder_6</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>888</th>\n      <td>1530</td>\n      <td>24</td>\n      <td>0</td>\n      <td>3.084694</td>\n      <td>1.915233</td>\n      <td>-0.113710</td>\n      <td>-0.582334</td>\n      <td>-0.677112</td>\n      <td>-0.665190</td>\n      <td>-2.158748</td>\n      <td>-0.962597</td>\n      <td>-1.867182</td>\n      <td>0.397424</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1530</td>\n      <td>24</td>\n      <td>1</td>\n      <td>2.232906</td>\n      <td>2.479117</td>\n      <td>-0.120363</td>\n      <td>-0.615883</td>\n      <td>-0.491795</td>\n      <td>-0.647937</td>\n      <td>1.323964</td>\n      <td>-0.962650</td>\n      <td>-1.512171</td>\n      <td>0.497049</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>1530</td>\n      <td>24</td>\n      <td>2</td>\n      <td>2.404948</td>\n      <td>1.518317</td>\n      <td>-0.134236</td>\n      <td>-0.676956</td>\n      <td>-0.841851</td>\n      <td>-0.749244</td>\n      <td>0.687150</td>\n      <td>-0.541013</td>\n      <td>-0.720962</td>\n      <td>-0.082120</td>\n    </tr>\n    <tr>\n      <th>891</th>\n      <td>1530</td>\n      <td>24</td>\n      <td>3</td>\n      <td>1.986533</td>\n      <td>2.414281</td>\n      <td>-0.207788</td>\n      <td>-0.636845</td>\n      <td>-0.812996</td>\n      <td>-0.604094</td>\n      <td>2.074668</td>\n      <td>0.096304</td>\n      <td>-0.028995</td>\n      <td>-2.276462</td>\n    </tr>\n    <tr>\n      <th>892</th>\n      <td>1530</td>\n      <td>24</td>\n      <td>4</td>\n      <td>2.742601</td>\n      <td>2.430181</td>\n      <td>-0.101107</td>\n      <td>-0.771855</td>\n      <td>-0.755586</td>\n      <td>-0.641029</td>\n      <td>1.203425</td>\n      <td>0.242947</td>\n      <td>-0.016361</td>\n      <td>0.266114</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>6274571</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>34</td>\n      <td>3.242493</td>\n      <td>0.417557</td>\n      <td>1.117796</td>\n      <td>-0.671189</td>\n      <td>-0.328600</td>\n      <td>-0.486132</td>\n      <td>-1.655316</td>\n      <td>1.309866</td>\n      <td>1.179617</td>\n      <td>-0.132337</td>\n    </tr>\n    <tr>\n      <th>6274572</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>35</td>\n      <td>1.079139</td>\n      <td>0.845065</td>\n      <td>1.180301</td>\n      <td>-0.421137</td>\n      <td>0.217080</td>\n      <td>-0.258775</td>\n      <td>0.763459</td>\n      <td>0.409564</td>\n      <td>-0.175486</td>\n      <td>-0.249584</td>\n    </tr>\n    <tr>\n      <th>6274573</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>36</td>\n      <td>1.033172</td>\n      <td>0.255077</td>\n      <td>1.172018</td>\n      <td>-0.528109</td>\n      <td>-0.704952</td>\n      <td>-0.704818</td>\n      <td>0.440965</td>\n      <td>-0.253755</td>\n      <td>-0.290343</td>\n      <td>-0.065355</td>\n    </tr>\n    <tr>\n      <th>6274574</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>37</td>\n      <td>1.243116</td>\n      <td>0.324454</td>\n      <td>1.185663</td>\n      <td>-0.611075</td>\n      <td>-0.513717</td>\n      <td>-0.891423</td>\n      <td>0.842925</td>\n      <td>0.203037</td>\n      <td>0.301135</td>\n      <td>-0.148711</td>\n    </tr>\n    <tr>\n      <th>6274575</th>\n      <td>1698</td>\n      <td>967</td>\n      <td>38</td>\n      <td>3.193685</td>\n      <td>0.454731</td>\n      <td>0.964795</td>\n      <td>-0.952069</td>\n      <td>-0.679168</td>\n      <td>-0.597603</td>\n      <td>-1.443649</td>\n      <td>0.517313</td>\n      <td>0.662521</td>\n      <td>-0.138548</td>\n    </tr>\n  </tbody>\n</table>\n<p>6118957 rows × 13 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"def custom_metric(y_true,y_pred,weight):\n    weighted_r2=1-(np.sum(weight*(y_true-y_pred)**2)/np.sum(weight*y_true**2))\n    return weighted_r2","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:50.264551Z","iopub.execute_input":"2024-10-26T16:51:50.265118Z","iopub.status.idle":"2024-10-26T16:51:50.271964Z","shell.execute_reply.started":"2024-10-26T16:51:50.265051Z","shell.execute_reply":"2024-10-26T16:51:50.270597Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"import lightgbm as lgb\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\nfeature_nums = [4,6,15,16,17,36,45,56]\nfeatures = [f'feature_{x:02}' for x in feature_nums]\n\nX = data[features].fillna(3).values\ny = data['responder_6'].values\nprint(\"train test split\")\nsplit = 1300000\nweights = data['weight'].values\ntrain_X, train_y, test_X, test_y, train_weight, test_weight = X[:-split], y[:-split], X[-split:], y[-split:], weights[:-split], weights[-split:]\n\n# Create LightGBM datasets\ntrain_data = lgb.Dataset(train_X, label=train_y, weight=train_weight)\ntest_data = lgb.Dataset(test_X, label=test_y, weight=test_weight)\n\n# Set parameters\nparams = {\n    'objective': 'regression',\n    'metric': 'mse',\n    'num_leaves': 31,\n    'learning_rate': 0.05,\n    'feature_fraction': 0.9\n}\n\n# Train the model\nmodel = lgb.train(params, train_data, num_boost_round=100, valid_sets=[test_data])\n\n# Make predictions\ntrain_pred = model.predict(train_X)\ntest_pred = model.predict(test_X)\n\n# Evaluate the model\nmse = mean_squared_error(test_y, test_pred)\nprint(f\"Mean Squared Error: {mse}\")","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:54:20.257334Z","iopub.execute_input":"2024-10-26T16:54:20.258000Z","iopub.status.idle":"2024-10-26T16:54:57.759286Z","shell.execute_reply.started":"2024-10-26T16:54:20.257938Z","shell.execute_reply":"2024-10-26T16:54:57.757848Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"train test split\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.300337 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 2040\n[LightGBM] [Info] Number of data points in the train set: 4818957, number of used features: 8\n[LightGBM] [Info] Start training from score -0.008444\nMean Squared Error: 0.5560710781811175\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\n\n# Define the parameter grid\nparam_grid = {\n    'num_leaves': [31, 127],\n    'learning_rate': [0.01, 0.1],\n    'n_estimators': [100, 200]\n}\n\n# Create a LightGBM classifier\nlgb_model = lgb.LGBMRegressor()  # Use LGBMClassifier for classification tasks\n\n# Perform grid search\ngrid_search = GridSearchCV(estimator=lgb_model, param_grid=param_grid, cv=5, scoring='neg_mean_squared_error')\ngrid_search.fit(X_train, y_train)\n\n# Get the best parameters and model\nbest_params = grid_search.best_params_\nbest_model = grid_search.best_estimator_\n\nprint(\"Best parameters:\", best_params)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T17:18:04.116856Z","iopub.execute_input":"2024-10-26T17:18:04.117505Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.633152 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 2040\n[LightGBM] [Info] Number of data points in the train set: 3916132, number of used features: 8\n[LightGBM] [Info] Start training from score -0.005002\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.609916 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 2040\n[LightGBM] [Info] Number of data points in the train set: 3916132, number of used features: 8\n[LightGBM] [Info] Start training from score -0.004822\n","output_type":"stream"}]},{"cell_type":"code","source":"print(len(train_X))\nprint(len(test_X))","metadata":{"execution":{"iopub.status.busy":"2024-10-26T17:17:17.185296Z","iopub.execute_input":"2024-10-26T17:17:17.185840Z","iopub.status.idle":"2024-10-26T17:17:17.193102Z","shell.execute_reply.started":"2024-10-26T17:17:17.185793Z","shell.execute_reply":"2024-10-26T17:17:17.191525Z"},"trusted":true},"execution_count":51,"outputs":[{"name":"stdout","text":"4818957\n1300000\n","output_type":"stream"}]},{"cell_type":"code","source":"# import lightgbm as lgb\n# import numpy as np\n# from sklearn.model_selection import train_test_split\n# from sklearn.metrics import mean_squared_error\n\n# feature_nums = [4,6,15,16,17,36,45,56]\n# features = [f'feature_{x:02}' for x in feature_nums]\n# # X = data[features]\n# # y = data['responder_6']\n# # # Assuming you have your features X and target y\n# # X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\n# X=data[features].fillna(3).values\n# y=data['responder_6'].values\n# print(\"train test split\")\n# split=1300000\n# weights=data['weight'].values\n# train_X,train_y,test_X,test_y,train_weight,test_weight=X[:-split],y[:-split],X[-split:],y[-split:],weights[:-split],weights[-split:]\n\n# # Create LightGBM datasets\n# train_data = lgb.Dataset(train_X, label=y_train)\n# test_data = lgb.Dataset(test_X, label=y_test)\n\n# # Set parameters\n# params = {\n#     'objective': 'regression',  # Change this to 'binary' for binary classification\n#     'metric': 'mse',\n#     'num_leaves': 31,\n#     'learning_rate': 0.05,\n#     'feature_fraction': 0.9\n# }\n\n# # Train the model\n# model = lgb.train(params, train_data, num_boost_round=100, valid_sets=[test_data])\n\n# # Make predictions\n# y_pred = model.predict(X_test)\n\n# train_pred=model.predict(train_X)\n# test_pred=model.predict(test_X)\n\n# # Evaluate the model\n# mse = mean_squared_error(y_test, y_pred)\n# print(f\"Mean Squared Error: {mse}\")","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:51:50.273989Z","iopub.execute_input":"2024-10-26T16:51:50.274953Z","iopub.status.idle":"2024-10-26T16:51:53.717448Z","shell.execute_reply.started":"2024-10-26T16:51:50.274897Z","shell.execute_reply":"2024-10-26T16:51:53.715112Z"},"trusted":true},"execution_count":46,"outputs":[{"name":"stdout","text":"train test split\n","output_type":"stream"},{"name":"stderr","text":"[LightGBM] [Fatal] Length of labels differs from the length of #data\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mLightGBMError\u001b[0m                             Traceback (most recent call last)","Cell \u001b[0;32mIn[46], line 35\u001b[0m\n\u001b[1;32m     26\u001b[0m params \u001b[38;5;241m=\u001b[39m {\n\u001b[1;32m     27\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mobjective\u001b[39m\u001b[38;5;124m'\u001b[39m: \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mregression\u001b[39m\u001b[38;5;124m'\u001b[39m,  \u001b[38;5;66;03m# Change this to 'binary' for binary classification\u001b[39;00m\n\u001b[1;32m     28\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmetric\u001b[39m\u001b[38;5;124m'\u001b[39m: \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmse\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     31\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfeature_fraction\u001b[39m\u001b[38;5;124m'\u001b[39m: \u001b[38;5;241m0.9\u001b[39m\n\u001b[1;32m     32\u001b[0m }\n\u001b[1;32m     34\u001b[0m \u001b[38;5;66;03m# Train the model\u001b[39;00m\n\u001b[0;32m---> 35\u001b[0m model \u001b[38;5;241m=\u001b[39m \u001b[43mlgb\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m(\u001b[49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrain_data\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnum_boost_round\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m100\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalid_sets\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m[\u001b[49m\u001b[43mtest_data\u001b[49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     37\u001b[0m \u001b[38;5;66;03m# Make predictions\u001b[39;00m\n\u001b[1;32m     38\u001b[0m y_pred \u001b[38;5;241m=\u001b[39m model\u001b[38;5;241m.\u001b[39mpredict(X_test)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/engine.py:255\u001b[0m, in \u001b[0;36mtrain\u001b[0;34m(params, train_set, num_boost_round, valid_sets, valid_names, feval, init_model, feature_name, categorical_feature, keep_training_booster, callbacks)\u001b[0m\n\u001b[1;32m    253\u001b[0m \u001b[38;5;66;03m# construct booster\u001b[39;00m\n\u001b[1;32m    254\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 255\u001b[0m     booster \u001b[38;5;241m=\u001b[39m \u001b[43mBooster\u001b[49m\u001b[43m(\u001b[49m\u001b[43mparams\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrain_set\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtrain_set\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    256\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m is_valid_contain_train:\n\u001b[1;32m    257\u001b[0m         booster\u001b[38;5;241m.\u001b[39mset_train_data_name(train_data_name)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:3433\u001b[0m, in \u001b[0;36mBooster.__init__\u001b[0;34m(self, params, train_set, model_file, model_str)\u001b[0m\n\u001b[1;32m   3426\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mset_network(\n\u001b[1;32m   3427\u001b[0m         machines\u001b[38;5;241m=\u001b[39mmachines,\n\u001b[1;32m   3428\u001b[0m         local_listen_port\u001b[38;5;241m=\u001b[39mparams[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlocal_listen_port\u001b[39m\u001b[38;5;124m\"\u001b[39m],\n\u001b[1;32m   3429\u001b[0m         listen_time_out\u001b[38;5;241m=\u001b[39mparams\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtime_out\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;241m120\u001b[39m),\n\u001b[1;32m   3430\u001b[0m         num_machines\u001b[38;5;241m=\u001b[39mparams[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnum_machines\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   3431\u001b[0m     )\n\u001b[1;32m   3432\u001b[0m \u001b[38;5;66;03m# construct booster object\u001b[39;00m\n\u001b[0;32m-> 3433\u001b[0m \u001b[43mtrain_set\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconstruct\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3434\u001b[0m \u001b[38;5;66;03m# copy the parameters from train_set\u001b[39;00m\n\u001b[1;32m   3435\u001b[0m params\u001b[38;5;241m.\u001b[39mupdate(train_set\u001b[38;5;241m.\u001b[39mget_params())\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:2462\u001b[0m, in \u001b[0;36mDataset.construct\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   2455\u001b[0m             \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_set_init_score_by_predictor(\n\u001b[1;32m   2456\u001b[0m                 predictor\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_predictor,\n\u001b[1;32m   2457\u001b[0m                 data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdata,\n\u001b[1;32m   2458\u001b[0m                 used_indices\u001b[38;5;241m=\u001b[39mused_indices\n\u001b[1;32m   2459\u001b[0m             )\n\u001b[1;32m   2460\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   2461\u001b[0m     \u001b[38;5;66;03m# create train\u001b[39;00m\n\u001b[0;32m-> 2462\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_lazy_init\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlabel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mreference\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m   2463\u001b[0m \u001b[43m                    \u001b[49m\u001b[43mweight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mweight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2464\u001b[0m \u001b[43m                    \u001b[49m\u001b[43minit_score\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43minit_score\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpredictor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_predictor\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2465\u001b[0m \u001b[43m                    \u001b[49m\u001b[43mfeature_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfeature_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcategorical_feature\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcategorical_feature\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2466\u001b[0m \u001b[43m                    \u001b[49m\u001b[43mparams\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mposition\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mposition\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2467\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfree_raw_data:\n\u001b[1;32m   2468\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdata \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:2101\u001b[0m, in \u001b[0;36mDataset._lazy_init\u001b[0;34m(self, data, label, reference, weight, group, init_score, predictor, feature_name, categorical_feature, params, position)\u001b[0m\n\u001b[1;32m   2099\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCannot initialize Dataset from \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mtype\u001b[39m(data)\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   2100\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m label \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 2101\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_label\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabel\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2102\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mget_label() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   2103\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mLabel should not be None\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:2892\u001b[0m, in \u001b[0;36mDataset.set_label\u001b[0;34m(self, label)\u001b[0m\n\u001b[1;32m   2890\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   2891\u001b[0m         label_array \u001b[38;5;241m=\u001b[39m _list_to_1d_numpy(label, dtype\u001b[38;5;241m=\u001b[39mnp\u001b[38;5;241m.\u001b[39mfloat32, name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlabel\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m-> 2892\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_field\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlabel\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabel_array\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2893\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlabel \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mget_field(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlabel\u001b[39m\u001b[38;5;124m'\u001b[39m)  \u001b[38;5;66;03m# original values can be modified at cpp side\u001b[39;00m\n\u001b[1;32m   2894\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:2682\u001b[0m, in \u001b[0;36mDataset.set_field\u001b[0;34m(self, field_name, data)\u001b[0m\n\u001b[1;32m   2680\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m type_data \u001b[38;5;241m!=\u001b[39m _FIELD_TYPE_MAPPER[field_name]:\n\u001b[1;32m   2681\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInput type error for set_field\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m-> 2682\u001b[0m \u001b[43m_safe_call\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_LIB\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mLGBM_DatasetSetField\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2683\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_handle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2684\u001b[0m \u001b[43m    \u001b[49m\u001b[43m_c_str\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfield_name\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2685\u001b[0m \u001b[43m    \u001b[49m\u001b[43mptr_data\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2686\u001b[0m \u001b[43m    \u001b[49m\u001b[43mctypes\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mc_int\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2687\u001b[0m \u001b[43m    \u001b[49m\u001b[43mctypes\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mc_int\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtype_data\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2688\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mversion \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[1;32m   2689\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/lightgbm/basic.py:263\u001b[0m, in \u001b[0;36m_safe_call\u001b[0;34m(ret)\u001b[0m\n\u001b[1;32m    255\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"Check the return value from C API call.\u001b[39;00m\n\u001b[1;32m    256\u001b[0m \n\u001b[1;32m    257\u001b[0m \u001b[38;5;124;03mParameters\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    260\u001b[0m \u001b[38;5;124;03m    The return value from C API calls.\u001b[39;00m\n\u001b[1;32m    261\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    262\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m ret \u001b[38;5;241m!=\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m--> 263\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m LightGBMError(_LIB\u001b[38;5;241m.\u001b[39mLGBM_GetLastError()\u001b[38;5;241m.\u001b[39mdecode(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m'\u001b[39m))\n","\u001b[0;31mLightGBMError\u001b[0m: Length of labels differs from the length of #data"],"ename":"LightGBMError","evalue":"Length of labels differs from the length of #data","output_type":"error"}]},{"cell_type":"code","source":"print(f\"train weighted_r2:{custom_metric(train_y,train_pred,weight=train_weight)}\")\nprint(f\"test weighted_r2:{custom_metric(test_y,test_pred,weight=test_weight)}\")","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:55:08.737778Z","iopub.execute_input":"2024-10-26T16:55:08.739691Z","iopub.status.idle":"2024-10-26T16:55:08.825491Z","shell.execute_reply.started":"2024-10-26T16:55:08.739461Z","shell.execute_reply":"2024-10-26T16:55:08.823606Z"},"trusted":true},"execution_count":48,"outputs":[{"name":"stdout","text":"train weighted_r2:0.006030887149624409\ntest weighted_r2:0.00419532101994291\n","output_type":"stream"}]},{"cell_type":"code","source":"def predict(data,lags):\n    feature_nums = [4,6,15,16,17,36,45,56]\n    cols = [f'feature_{x:02}' for x in feature_nums]\n    predictions = data.select(\n        'row_id',\n        pl.lit(0.0).alias('responder_6'),\n    )\n    test_preds=model.predict(data[cols].to_pandas().fillna(3).values)\n    predictions = predictions.with_columns(pl.Series('responder_6', test_preds.ravel()))\n    return predictions\n\ninference_server = kaggle_evaluation.jane_street_inference_server.JSInferenceServer(predict)\n\nif os.getenv('KAGGLE_IS_COMPETITION_RERUN'):\n    inference_server.serve()\nelse:\n    inference_server.run_local_gateway(\n        (\n            '/kaggle/input/jane-street-real-time-market-data-forecasting/test.parquet',\n            '/kaggle/input/jane-street-real-time-market-data-forecasting/lags.parquet',\n        )\n    )","metadata":{"execution":{"iopub.status.busy":"2024-10-26T16:55:24.026676Z","iopub.execute_input":"2024-10-26T16:55:24.027271Z","iopub.status.idle":"2024-10-26T16:55:24.087756Z","shell.execute_reply.started":"2024-10-26T16:55:24.027217Z","shell.execute_reply":"2024-10-26T16:55:24.086307Z"},"trusted":true},"execution_count":49,"outputs":[]}]}